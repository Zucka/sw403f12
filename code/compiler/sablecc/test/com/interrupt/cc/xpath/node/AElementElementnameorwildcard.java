/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AElementElementnameorwildcard extends PElementnameorwildcard
{
    private PElementname _elementname_;

    public AElementElementnameorwildcard()
    {
        // Constructor
    }

    public AElementElementnameorwildcard(
        @SuppressWarnings("hiding") PElementname _elementname_)
    {
        // Constructor
        setElementname(_elementname_);

    }

    @Override
    public Object clone()
    {
        return new AElementElementnameorwildcard(
            cloneNode(this._elementname_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAElementElementnameorwildcard(this);
    }

    public PElementname getElementname()
    {
        return this._elementname_;
    }

    public void setElementname(PElementname node)
    {
        if(this._elementname_ != null)
        {
            this._elementname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementname_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._elementname_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._elementname_ == child)
        {
            this._elementname_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._elementname_ == oldChild)
        {
            setElementname((PElementname) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
