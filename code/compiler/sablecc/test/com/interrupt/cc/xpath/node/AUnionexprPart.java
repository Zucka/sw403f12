/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AUnionexprPart extends PUnionexprPart
{
    private PUnionexprPartPart _unionexprPartPart_;
    private PIntersectexceptexpr _intersectexceptexpr_;

    public AUnionexprPart()
    {
        // Constructor
    }

    public AUnionexprPart(
        @SuppressWarnings("hiding") PUnionexprPartPart _unionexprPartPart_,
        @SuppressWarnings("hiding") PIntersectexceptexpr _intersectexceptexpr_)
    {
        // Constructor
        setUnionexprPartPart(_unionexprPartPart_);

        setIntersectexceptexpr(_intersectexceptexpr_);

    }

    @Override
    public Object clone()
    {
        return new AUnionexprPart(
            cloneNode(this._unionexprPartPart_),
            cloneNode(this._intersectexceptexpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnionexprPart(this);
    }

    public PUnionexprPartPart getUnionexprPartPart()
    {
        return this._unionexprPartPart_;
    }

    public void setUnionexprPartPart(PUnionexprPartPart node)
    {
        if(this._unionexprPartPart_ != null)
        {
            this._unionexprPartPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unionexprPartPart_ = node;
    }

    public PIntersectexceptexpr getIntersectexceptexpr()
    {
        return this._intersectexceptexpr_;
    }

    public void setIntersectexceptexpr(PIntersectexceptexpr node)
    {
        if(this._intersectexceptexpr_ != null)
        {
            this._intersectexceptexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._intersectexceptexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._unionexprPartPart_)
            + toString(this._intersectexceptexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._unionexprPartPart_ == child)
        {
            this._unionexprPartPart_ = null;
            return;
        }

        if(this._intersectexceptexpr_ == child)
        {
            this._intersectexceptexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._unionexprPartPart_ == oldChild)
        {
            setUnionexprPartPart((PUnionexprPartPart) newChild);
            return;
        }

        if(this._intersectexceptexpr_ == oldChild)
        {
            setIntersectexceptexpr((PIntersectexceptexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
