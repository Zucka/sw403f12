/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class APath2Pathexpr extends PPathexpr
{
    private PPathexprPartTwo _pathexprPartTwo_;

    public APath2Pathexpr()
    {
        // Constructor
    }

    public APath2Pathexpr(
        @SuppressWarnings("hiding") PPathexprPartTwo _pathexprPartTwo_)
    {
        // Constructor
        setPathexprPartTwo(_pathexprPartTwo_);

    }

    @Override
    public Object clone()
    {
        return new APath2Pathexpr(
            cloneNode(this._pathexprPartTwo_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPath2Pathexpr(this);
    }

    public PPathexprPartTwo getPathexprPartTwo()
    {
        return this._pathexprPartTwo_;
    }

    public void setPathexprPartTwo(PPathexprPartTwo node)
    {
        if(this._pathexprPartTwo_ != null)
        {
            this._pathexprPartTwo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pathexprPartTwo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pathexprPartTwo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pathexprPartTwo_ == child)
        {
            this._pathexprPartTwo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pathexprPartTwo_ == oldChild)
        {
            setPathexprPartTwo((PPathexprPartTwo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
