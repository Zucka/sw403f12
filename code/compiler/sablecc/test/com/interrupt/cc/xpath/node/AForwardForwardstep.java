/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AForwardForwardstep extends PForwardstep
{
    private PForwardstepPart _forwardstepPart_;

    public AForwardForwardstep()
    {
        // Constructor
    }

    public AForwardForwardstep(
        @SuppressWarnings("hiding") PForwardstepPart _forwardstepPart_)
    {
        // Constructor
        setForwardstepPart(_forwardstepPart_);

    }

    @Override
    public Object clone()
    {
        return new AForwardForwardstep(
            cloneNode(this._forwardstepPart_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForwardForwardstep(this);
    }

    public PForwardstepPart getForwardstepPart()
    {
        return this._forwardstepPart_;
    }

    public void setForwardstepPart(PForwardstepPart node)
    {
        if(this._forwardstepPart_ != null)
        {
            this._forwardstepPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._forwardstepPart_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._forwardstepPart_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._forwardstepPart_ == child)
        {
            this._forwardstepPart_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._forwardstepPart_ == oldChild)
        {
            setForwardstepPart((PForwardstepPart) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
