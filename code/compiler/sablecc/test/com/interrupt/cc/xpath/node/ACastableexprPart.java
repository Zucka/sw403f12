/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class ACastableexprPart extends PCastableexprPart
{
    private TKeywordCastable _keywordCastable_;
    private TKeywordAs _keywordAs_;
    private PSingletype _singletype_;

    public ACastableexprPart()
    {
        // Constructor
    }

    public ACastableexprPart(
        @SuppressWarnings("hiding") TKeywordCastable _keywordCastable_,
        @SuppressWarnings("hiding") TKeywordAs _keywordAs_,
        @SuppressWarnings("hiding") PSingletype _singletype_)
    {
        // Constructor
        setKeywordCastable(_keywordCastable_);

        setKeywordAs(_keywordAs_);

        setSingletype(_singletype_);

    }

    @Override
    public Object clone()
    {
        return new ACastableexprPart(
            cloneNode(this._keywordCastable_),
            cloneNode(this._keywordAs_),
            cloneNode(this._singletype_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACastableexprPart(this);
    }

    public TKeywordCastable getKeywordCastable()
    {
        return this._keywordCastable_;
    }

    public void setKeywordCastable(TKeywordCastable node)
    {
        if(this._keywordCastable_ != null)
        {
            this._keywordCastable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._keywordCastable_ = node;
    }

    public TKeywordAs getKeywordAs()
    {
        return this._keywordAs_;
    }

    public void setKeywordAs(TKeywordAs node)
    {
        if(this._keywordAs_ != null)
        {
            this._keywordAs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._keywordAs_ = node;
    }

    public PSingletype getSingletype()
    {
        return this._singletype_;
    }

    public void setSingletype(PSingletype node)
    {
        if(this._singletype_ != null)
        {
            this._singletype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._singletype_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._keywordCastable_)
            + toString(this._keywordAs_)
            + toString(this._singletype_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._keywordCastable_ == child)
        {
            this._keywordCastable_ = null;
            return;
        }

        if(this._keywordAs_ == child)
        {
            this._keywordAs_ = null;
            return;
        }

        if(this._singletype_ == child)
        {
            this._singletype_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._keywordCastable_ == oldChild)
        {
            setKeywordCastable((TKeywordCastable) newChild);
            return;
        }

        if(this._keywordAs_ == oldChild)
        {
            setKeywordAs((TKeywordAs) newChild);
            return;
        }

        if(this._singletype_ == oldChild)
        {
            setSingletype((PSingletype) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
