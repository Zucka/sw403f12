/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AReverseaxisPartFive extends PReverseaxisPartFive
{
    private TAxisAncestorOrSelf _axisAncestorOrSelf_;
    private TAxisDelim _axisDelim_;

    public AReverseaxisPartFive()
    {
        // Constructor
    }

    public AReverseaxisPartFive(
        @SuppressWarnings("hiding") TAxisAncestorOrSelf _axisAncestorOrSelf_,
        @SuppressWarnings("hiding") TAxisDelim _axisDelim_)
    {
        // Constructor
        setAxisAncestorOrSelf(_axisAncestorOrSelf_);

        setAxisDelim(_axisDelim_);

    }

    @Override
    public Object clone()
    {
        return new AReverseaxisPartFive(
            cloneNode(this._axisAncestorOrSelf_),
            cloneNode(this._axisDelim_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAReverseaxisPartFive(this);
    }

    public TAxisAncestorOrSelf getAxisAncestorOrSelf()
    {
        return this._axisAncestorOrSelf_;
    }

    public void setAxisAncestorOrSelf(TAxisAncestorOrSelf node)
    {
        if(this._axisAncestorOrSelf_ != null)
        {
            this._axisAncestorOrSelf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._axisAncestorOrSelf_ = node;
    }

    public TAxisDelim getAxisDelim()
    {
        return this._axisDelim_;
    }

    public void setAxisDelim(TAxisDelim node)
    {
        if(this._axisDelim_ != null)
        {
            this._axisDelim_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._axisDelim_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._axisAncestorOrSelf_)
            + toString(this._axisDelim_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._axisAncestorOrSelf_ == child)
        {
            this._axisAncestorOrSelf_ = null;
            return;
        }

        if(this._axisDelim_ == child)
        {
            this._axisDelim_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._axisAncestorOrSelf_ == oldChild)
        {
            setAxisAncestorOrSelf((TAxisAncestorOrSelf) newChild);
            return;
        }

        if(this._axisDelim_ == oldChild)
        {
            setAxisDelim((TAxisDelim) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
