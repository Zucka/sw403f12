/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.analysis;

import java.util.*;
import com.interrupt.cc.xpath.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAXpath(AXpath node)
    {
        defaultCase(node);
    }

    public void caseAExpr(AExpr node)
    {
        defaultCase(node);
    }

    public void caseAExprPart(AExprPart node)
    {
        defaultCase(node);
    }

    public void caseAForExprsingle(AForExprsingle node)
    {
        defaultCase(node);
    }

    public void caseAQuantifExprsingle(AQuantifExprsingle node)
    {
        defaultCase(node);
    }

    public void caseAIfExprsingle(AIfExprsingle node)
    {
        defaultCase(node);
    }

    public void caseAOrExprsingle(AOrExprsingle node)
    {
        defaultCase(node);
    }

    public void caseAForexpr(AForexpr node)
    {
        defaultCase(node);
    }

    public void caseASimpleforclause(ASimpleforclause node)
    {
        defaultCase(node);
    }

    public void caseASimpleforclausePart(ASimpleforclausePart node)
    {
        defaultCase(node);
    }

    public void caseAQuantifiedexpr(AQuantifiedexpr node)
    {
        defaultCase(node);
    }

    public void caseASomeSomeEveryPart(ASomeSomeEveryPart node)
    {
        defaultCase(node);
    }

    public void caseAEverySomeEveryPart(AEverySomeEveryPart node)
    {
        defaultCase(node);
    }

    public void caseAQuantifiedexprPart(AQuantifiedexprPart node)
    {
        defaultCase(node);
    }

    public void caseAIfexpr(AIfexpr node)
    {
        defaultCase(node);
    }

    public void caseAOrexpr(AOrexpr node)
    {
        defaultCase(node);
    }

    public void caseAOrexprPart(AOrexprPart node)
    {
        defaultCase(node);
    }

    public void caseAAndexpr(AAndexpr node)
    {
        defaultCase(node);
    }

    public void caseAAndexprPart(AAndexprPart node)
    {
        defaultCase(node);
    }

    public void caseAComparisonexpr(AComparisonexpr node)
    {
        defaultCase(node);
    }

    public void caseAComparisonexprPart(AComparisonexprPart node)
    {
        defaultCase(node);
    }

    public void caseAValueComparisonexprPartPart(AValueComparisonexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAGeneralComparisonexprPartPart(AGeneralComparisonexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseANodeComparisonexprPartPart(ANodeComparisonexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseARangeexpr(ARangeexpr node)
    {
        defaultCase(node);
    }

    public void caseARangeexprPart(ARangeexprPart node)
    {
        defaultCase(node);
    }

    public void caseAAdditiveexpr(AAdditiveexpr node)
    {
        defaultCase(node);
    }

    public void caseAAdditiveexprPart(AAdditiveexprPart node)
    {
        defaultCase(node);
    }

    public void caseAPlusAdditiveexprPartPart(APlusAdditiveexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAMinusAdditiveexprPartPart(AMinusAdditiveexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAMultiplicativeexpr(AMultiplicativeexpr node)
    {
        defaultCase(node);
    }

    public void caseAMultiplicativeexprPart(AMultiplicativeexprPart node)
    {
        defaultCase(node);
    }

    public void caseAStarMultiplicativeexprPartPart(AStarMultiplicativeexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseADivMultiplicativeexprPartPart(ADivMultiplicativeexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAIdivMultiplicativeexprPartPart(AIdivMultiplicativeexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAModMultiplicativeexprPartPart(AModMultiplicativeexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAUnionexpr(AUnionexpr node)
    {
        defaultCase(node);
    }

    public void caseAUnionexprPart(AUnionexprPart node)
    {
        defaultCase(node);
    }

    public void caseAUnionkeyUnionexprPartPart(AUnionkeyUnionexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAUnionUnionexprPartPart(AUnionUnionexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAIntersectexceptexpr(AIntersectexceptexpr node)
    {
        defaultCase(node);
    }

    public void caseAIntersectexceptexprPart(AIntersectexceptexprPart node)
    {
        defaultCase(node);
    }

    public void caseAIntersectIntersectexceptexprPartPart(AIntersectIntersectexceptexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAExceptIntersectexceptexprPartPart(AExceptIntersectexceptexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAInstanceofexpr(AInstanceofexpr node)
    {
        defaultCase(node);
    }

    public void caseAInstanceofexprPart(AInstanceofexprPart node)
    {
        defaultCase(node);
    }

    public void caseATreatexpr(ATreatexpr node)
    {
        defaultCase(node);
    }

    public void caseATreatexprPart(ATreatexprPart node)
    {
        defaultCase(node);
    }

    public void caseACastableexpr(ACastableexpr node)
    {
        defaultCase(node);
    }

    public void caseACastableexprPart(ACastableexprPart node)
    {
        defaultCase(node);
    }

    public void caseACastexpr(ACastexpr node)
    {
        defaultCase(node);
    }

    public void caseACastexprPart(ACastexprPart node)
    {
        defaultCase(node);
    }

    public void caseAUnaryexpr(AUnaryexpr node)
    {
        defaultCase(node);
    }

    public void caseAMinusUnaryexprPart(AMinusUnaryexprPart node)
    {
        defaultCase(node);
    }

    public void caseAPlusUnaryexprPart(APlusUnaryexprPart node)
    {
        defaultCase(node);
    }

    public void caseAValueexpr(AValueexpr node)
    {
        defaultCase(node);
    }

    public void caseAEqGeneralcomp(AEqGeneralcomp node)
    {
        defaultCase(node);
    }

    public void caseANeGeneralcomp(ANeGeneralcomp node)
    {
        defaultCase(node);
    }

    public void caseALtGeneralcomp(ALtGeneralcomp node)
    {
        defaultCase(node);
    }

    public void caseALeGeneralcomp(ALeGeneralcomp node)
    {
        defaultCase(node);
    }

    public void caseAGtGeneralcomp(AGtGeneralcomp node)
    {
        defaultCase(node);
    }

    public void caseAGeGeneralcomp(AGeGeneralcomp node)
    {
        defaultCase(node);
    }

    public void caseAEqValuecomp(AEqValuecomp node)
    {
        defaultCase(node);
    }

    public void caseANeValuecomp(ANeValuecomp node)
    {
        defaultCase(node);
    }

    public void caseALtValuecomp(ALtValuecomp node)
    {
        defaultCase(node);
    }

    public void caseALeValuecomp(ALeValuecomp node)
    {
        defaultCase(node);
    }

    public void caseAGtValuecomp(AGtValuecomp node)
    {
        defaultCase(node);
    }

    public void caseAGeValuecomp(AGeValuecomp node)
    {
        defaultCase(node);
    }

    public void caseAIsNodecomp(AIsNodecomp node)
    {
        defaultCase(node);
    }

    public void caseANcomppreNodecomp(ANcomppreNodecomp node)
    {
        defaultCase(node);
    }

    public void caseANcompfolNodecomp(ANcompfolNodecomp node)
    {
        defaultCase(node);
    }

    public void caseAPath1Pathexpr(APath1Pathexpr node)
    {
        defaultCase(node);
    }

    public void caseAPath2Pathexpr(APath2Pathexpr node)
    {
        defaultCase(node);
    }

    public void caseARelpathPathexpr(ARelpathPathexpr node)
    {
        defaultCase(node);
    }

    public void caseAPathexprPartOne(APathexprPartOne node)
    {
        defaultCase(node);
    }

    public void caseAPathexprPartTwo(APathexprPartTwo node)
    {
        defaultCase(node);
    }

    public void caseARelativepathexpr(ARelativepathexpr node)
    {
        defaultCase(node);
    }

    public void caseARelativepathexprPart(ARelativepathexprPart node)
    {
        defaultCase(node);
    }

    public void caseARootRelativepathexprPartPart(ARootRelativepathexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseARootdescRelativepathexprPartPart(ARootdescRelativepathexprPartPart node)
    {
        defaultCase(node);
    }

    public void caseAFilterStepexpr(AFilterStepexpr node)
    {
        defaultCase(node);
    }

    public void caseAAxisStepexpr(AAxisStepexpr node)
    {
        defaultCase(node);
    }

    public void caseAAxisstep(AAxisstep node)
    {
        defaultCase(node);
    }

    public void caseAReverseAxisstepPart(AReverseAxisstepPart node)
    {
        defaultCase(node);
    }

    public void caseAForwardAxisstepPart(AForwardAxisstepPart node)
    {
        defaultCase(node);
    }

    public void caseAForwardForwardstep(AForwardForwardstep node)
    {
        defaultCase(node);
    }

    public void caseAAbbrevforwardForwardstep(AAbbrevforwardForwardstep node)
    {
        defaultCase(node);
    }

    public void caseAForwardstepPart(AForwardstepPart node)
    {
        defaultCase(node);
    }

    public void caseAForward1Forwardaxis(AForward1Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward2Forwardaxis(AForward2Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward3Forwardaxis(AForward3Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward4Forwardaxis(AForward4Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward5Forwardaxis(AForward5Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward6Forwardaxis(AForward6Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward7Forwardaxis(AForward7Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForward8Forwardaxis(AForward8Forwardaxis node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartOne(AForwardaxisPartOne node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartTwo(AForwardaxisPartTwo node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartThree(AForwardaxisPartThree node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartFour(AForwardaxisPartFour node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartFive(AForwardaxisPartFive node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartSix(AForwardaxisPartSix node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartSeven(AForwardaxisPartSeven node)
    {
        defaultCase(node);
    }

    public void caseAForwardaxisPartEight(AForwardaxisPartEight node)
    {
        defaultCase(node);
    }

    public void caseAAbbrevforwardstep(AAbbrevforwardstep node)
    {
        defaultCase(node);
    }

    public void caseAReverseReversestep(AReverseReversestep node)
    {
        defaultCase(node);
    }

    public void caseAAbbrevreverseReversestep(AAbbrevreverseReversestep node)
    {
        defaultCase(node);
    }

    public void caseAReversestepPart(AReversestepPart node)
    {
        defaultCase(node);
    }

    public void caseAReverse1Reverseaxis(AReverse1Reverseaxis node)
    {
        defaultCase(node);
    }

    public void caseAReverse2Reverseaxis(AReverse2Reverseaxis node)
    {
        defaultCase(node);
    }

    public void caseAReverse3Reverseaxis(AReverse3Reverseaxis node)
    {
        defaultCase(node);
    }

    public void caseAReverse4Reverseaxis(AReverse4Reverseaxis node)
    {
        defaultCase(node);
    }

    public void caseAReverse5Reverseaxis(AReverse5Reverseaxis node)
    {
        defaultCase(node);
    }

    public void caseAReverseaxisPartOne(AReverseaxisPartOne node)
    {
        defaultCase(node);
    }

    public void caseAReverseaxisPartTwo(AReverseaxisPartTwo node)
    {
        defaultCase(node);
    }

    public void caseAReverseaxisPartThree(AReverseaxisPartThree node)
    {
        defaultCase(node);
    }

    public void caseAReverseaxisPartFour(AReverseaxisPartFour node)
    {
        defaultCase(node);
    }

    public void caseAReverseaxisPartFive(AReverseaxisPartFive node)
    {
        defaultCase(node);
    }

    public void caseAAbbrevreversestep(AAbbrevreversestep node)
    {
        defaultCase(node);
    }

    public void caseAKindNodetest(AKindNodetest node)
    {
        defaultCase(node);
    }

    public void caseANameNodetest(ANameNodetest node)
    {
        defaultCase(node);
    }

    public void caseAQnameNametest(AQnameNametest node)
    {
        defaultCase(node);
    }

    public void caseAWildcNametest(AWildcNametest node)
    {
        defaultCase(node);
    }

    public void caseAStarWildcard(AStarWildcard node)
    {
        defaultCase(node);
    }

    public void caseAWild1Wildcard(AWild1Wildcard node)
    {
        defaultCase(node);
    }

    public void caseAWild2Wildcard(AWild2Wildcard node)
    {
        defaultCase(node);
    }

    public void caseAWildcardPartOne(AWildcardPartOne node)
    {
        defaultCase(node);
    }

    public void caseAWildcardPartTwo(AWildcardPartTwo node)
    {
        defaultCase(node);
    }

    public void caseAFilterexpr(AFilterexpr node)
    {
        defaultCase(node);
    }

    public void caseAPredicatelist(APredicatelist node)
    {
        defaultCase(node);
    }

    public void caseAPredicate(APredicate node)
    {
        defaultCase(node);
    }

    public void caseALiteralPrimaryexpr(ALiteralPrimaryexpr node)
    {
        defaultCase(node);
    }

    public void caseAVarrefPrimaryexpr(AVarrefPrimaryexpr node)
    {
        defaultCase(node);
    }

    public void caseAParenthexPrimaryexpr(AParenthexPrimaryexpr node)
    {
        defaultCase(node);
    }

    public void caseAContextexPrimaryexpr(AContextexPrimaryexpr node)
    {
        defaultCase(node);
    }

    public void caseAFunctionPrimaryexpr(AFunctionPrimaryexpr node)
    {
        defaultCase(node);
    }

    public void caseANumericLiteral(ANumericLiteral node)
    {
        defaultCase(node);
    }

    public void caseAStringLiteral(AStringLiteral node)
    {
        defaultCase(node);
    }

    public void caseAIntegerNumericliteral(AIntegerNumericliteral node)
    {
        defaultCase(node);
    }

    public void caseADecimalNumericliteral(ADecimalNumericliteral node)
    {
        defaultCase(node);
    }

    public void caseADoubleNumericliteral(ADoubleNumericliteral node)
    {
        defaultCase(node);
    }

    public void caseAVarref(AVarref node)
    {
        defaultCase(node);
    }

    public void caseAVarname(AVarname node)
    {
        defaultCase(node);
    }

    public void caseAParenthesizedexpr(AParenthesizedexpr node)
    {
        defaultCase(node);
    }

    public void caseAContextitemexpr(AContextitemexpr node)
    {
        defaultCase(node);
    }

    public void caseAFunctioncall(AFunctioncall node)
    {
        defaultCase(node);
    }

    public void caseAFunctioncallPart(AFunctioncallPart node)
    {
        defaultCase(node);
    }

    public void caseAFunctioncallPartPart(AFunctioncallPartPart node)
    {
        defaultCase(node);
    }

    public void caseASingletype(ASingletype node)
    {
        defaultCase(node);
    }

    public void caseASequencetype1Sequencetype(ASequencetype1Sequencetype node)
    {
        defaultCase(node);
    }

    public void caseASequencetype2Sequencetype(ASequencetype2Sequencetype node)
    {
        defaultCase(node);
    }

    public void caseASequencetypePartOne(ASequencetypePartOne node)
    {
        defaultCase(node);
    }

    public void caseASequencetypePartTwo(ASequencetypePartTwo node)
    {
        defaultCase(node);
    }

    public void caseAQuestionOccurrenceindicator(AQuestionOccurrenceindicator node)
    {
        defaultCase(node);
    }

    public void caseAStarOccurrenceindicator(AStarOccurrenceindicator node)
    {
        defaultCase(node);
    }

    public void caseAPlusOccurrenceindicator(APlusOccurrenceindicator node)
    {
        defaultCase(node);
    }

    public void caseAKindItemtype(AKindItemtype node)
    {
        defaultCase(node);
    }

    public void caseAItemItemtype(AItemItemtype node)
    {
        defaultCase(node);
    }

    public void caseAAtomicItemtype(AAtomicItemtype node)
    {
        defaultCase(node);
    }

    public void caseAItemtypePart(AItemtypePart node)
    {
        defaultCase(node);
    }

    public void caseAAtomictype(AAtomictype node)
    {
        defaultCase(node);
    }

    public void caseADocumentKindtest(ADocumentKindtest node)
    {
        defaultCase(node);
    }

    public void caseAElementKindtest(AElementKindtest node)
    {
        defaultCase(node);
    }

    public void caseAAttributeKindtest(AAttributeKindtest node)
    {
        defaultCase(node);
    }

    public void caseASchemaelemKindtest(ASchemaelemKindtest node)
    {
        defaultCase(node);
    }

    public void caseASchemaattrKindtest(ASchemaattrKindtest node)
    {
        defaultCase(node);
    }

    public void caseAPiKindtest(APiKindtest node)
    {
        defaultCase(node);
    }

    public void caseACommentKindtest(ACommentKindtest node)
    {
        defaultCase(node);
    }

    public void caseATextKindtest(ATextKindtest node)
    {
        defaultCase(node);
    }

    public void caseAAnyKindtest(AAnyKindtest node)
    {
        defaultCase(node);
    }

    public void caseAAkindtest(AAkindtest node)
    {
        defaultCase(node);
    }

    public void caseADocumenttest(ADocumenttest node)
    {
        defaultCase(node);
    }

    public void caseAElementDocumenttestPart(AElementDocumenttestPart node)
    {
        defaultCase(node);
    }

    public void caseASchemaelemDocumenttestPart(ASchemaelemDocumenttestPart node)
    {
        defaultCase(node);
    }

    public void caseATexttest(ATexttest node)
    {
        defaultCase(node);
    }

    public void caseACommenttest(ACommenttest node)
    {
        defaultCase(node);
    }

    public void caseAPitest(APitest node)
    {
        defaultCase(node);
    }

    public void caseANcnamePitestPart(ANcnamePitestPart node)
    {
        defaultCase(node);
    }

    public void caseAStringlitPitestPart(AStringlitPitestPart node)
    {
        defaultCase(node);
    }

    public void caseAAttributetest(AAttributetest node)
    {
        defaultCase(node);
    }

    public void caseAAttributetestPart(AAttributetestPart node)
    {
        defaultCase(node);
    }

    public void caseAAttributetestPartPart(AAttributetestPartPart node)
    {
        defaultCase(node);
    }

    public void caseAAttribAttribnameorwildcard(AAttribAttribnameorwildcard node)
    {
        defaultCase(node);
    }

    public void caseAStarAttribnameorwildcard(AStarAttribnameorwildcard node)
    {
        defaultCase(node);
    }

    public void caseASchemaattributetest(ASchemaattributetest node)
    {
        defaultCase(node);
    }

    public void caseAAttributedeclaration(AAttributedeclaration node)
    {
        defaultCase(node);
    }

    public void caseAElementtest(AElementtest node)
    {
        defaultCase(node);
    }

    public void caseAElementtestPart(AElementtestPart node)
    {
        defaultCase(node);
    }

    public void caseAElementtestPartPart(AElementtestPartPart node)
    {
        defaultCase(node);
    }

    public void caseAElementElementnameorwildcard(AElementElementnameorwildcard node)
    {
        defaultCase(node);
    }

    public void caseAStarElementnameorwildcard(AStarElementnameorwildcard node)
    {
        defaultCase(node);
    }

    public void caseASchemaelementtest(ASchemaelementtest node)
    {
        defaultCase(node);
    }

    public void caseAElementdeclaration(AElementdeclaration node)
    {
        defaultCase(node);
    }

    public void caseAAttributename(AAttributename node)
    {
        defaultCase(node);
    }

    public void caseAElementname(AElementname node)
    {
        defaultCase(node);
    }

    public void caseATypename(ATypename node)
    {
        defaultCase(node);
    }

    public void caseAPrefixedQname(APrefixedQname node)
    {
        defaultCase(node);
    }

    public void caseAUnprefixedQname(AUnprefixedQname node)
    {
        defaultCase(node);
    }

    public void caseAPrefixedname(APrefixedname node)
    {
        defaultCase(node);
    }

    public void caseAUnprefixedname(AUnprefixedname node)
    {
        defaultCase(node);
    }

    public void caseAPrefix(APrefix node)
    {
        defaultCase(node);
    }

    public void caseALocalpart(ALocalpart node)
    {
        defaultCase(node);
    }

    public void caseAPrefixedNsattname(APrefixedNsattname node)
    {
        defaultCase(node);
    }

    public void caseADefaultNsattname(ADefaultNsattname node)
    {
        defaultCase(node);
    }

    public void caseAPrefixedattname(APrefixedattname node)
    {
        defaultCase(node);
    }

    public void caseADefaultattname(ADefaultattname node)
    {
        defaultCase(node);
    }

    public void caseANcname(ANcname node)
    {
        defaultCase(node);
    }

    public void caseALetterNcnamestartchar(ALetterNcnamestartchar node)
    {
        defaultCase(node);
    }

    public void caseAUnderscoreNcnamestartchar(AUnderscoreNcnamestartchar node)
    {
        defaultCase(node);
    }

    public void caseTKeywordReturn(TKeywordReturn node)
    {
        defaultCase(node);
    }

    public void caseTKeywordFor(TKeywordFor node)
    {
        defaultCase(node);
    }

    public void caseTKeywordIn(TKeywordIn node)
    {
        defaultCase(node);
    }

    public void caseTKeywordIf(TKeywordIf node)
    {
        defaultCase(node);
    }

    public void caseTKeywordIs(TKeywordIs node)
    {
        defaultCase(node);
    }

    public void caseTKeywordSatisfies(TKeywordSatisfies node)
    {
        defaultCase(node);
    }

    public void caseTKeywordThen(TKeywordThen node)
    {
        defaultCase(node);
    }

    public void caseTKeywordElse(TKeywordElse node)
    {
        defaultCase(node);
    }

    public void caseTKeywordOr(TKeywordOr node)
    {
        defaultCase(node);
    }

    public void caseTKeywordAnd(TKeywordAnd node)
    {
        defaultCase(node);
    }

    public void caseTKeywordTo(TKeywordTo node)
    {
        defaultCase(node);
    }

    public void caseTKeywordDiv(TKeywordDiv node)
    {
        defaultCase(node);
    }

    public void caseTKeywordIdiv(TKeywordIdiv node)
    {
        defaultCase(node);
    }

    public void caseTKeywordMod(TKeywordMod node)
    {
        defaultCase(node);
    }

    public void caseTKeywordUnion(TKeywordUnion node)
    {
        defaultCase(node);
    }

    public void caseTKeywordIntersect(TKeywordIntersect node)
    {
        defaultCase(node);
    }

    public void caseTKeywordExcept(TKeywordExcept node)
    {
        defaultCase(node);
    }

    public void caseTKeywordInstance(TKeywordInstance node)
    {
        defaultCase(node);
    }

    public void caseTKeywordOf(TKeywordOf node)
    {
        defaultCase(node);
    }

    public void caseTKeywordTreat(TKeywordTreat node)
    {
        defaultCase(node);
    }

    public void caseTKeywordAs(TKeywordAs node)
    {
        defaultCase(node);
    }

    public void caseTKeywordCastable(TKeywordCastable node)
    {
        defaultCase(node);
    }

    public void caseTKeywordCast(TKeywordCast node)
    {
        defaultCase(node);
    }

    public void caseTKeywordSome(TKeywordSome node)
    {
        defaultCase(node);
    }

    public void caseTKeywordEvery(TKeywordEvery node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTDollar(TDollar node)
    {
        defaultCase(node);
    }

    public void caseTQuestion(TQuestion node)
    {
        defaultCase(node);
    }

    public void caseTLparenth(TLparenth node)
    {
        defaultCase(node);
    }

    public void caseTRparenth(TRparenth node)
    {
        defaultCase(node);
    }

    public void caseTLbracket(TLbracket node)
    {
        defaultCase(node);
    }

    public void caseTRbracket(TRbracket node)
    {
        defaultCase(node);
    }

    public void caseTPlus2(TPlus2 node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTMinus2(TMinus2 node)
    {
        defaultCase(node);
    }

    public void caseTStar2(TStar2 node)
    {
        defaultCase(node);
    }

    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    public void caseTUnion(TUnion node)
    {
        defaultCase(node);
    }

    public void caseTEquals(TEquals node)
    {
        defaultCase(node);
    }

    public void caseTNeAbbrev(TNeAbbrev node)
    {
        defaultCase(node);
    }

    public void caseTLtAbbrev(TLtAbbrev node)
    {
        defaultCase(node);
    }

    public void caseTLeAbbrev(TLeAbbrev node)
    {
        defaultCase(node);
    }

    public void caseTGtAbbrev(TGtAbbrev node)
    {
        defaultCase(node);
    }

    public void caseTGeAbbrev(TGeAbbrev node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTNe(TNe node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTLe(TLe node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTGe(TGe node)
    {
        defaultCase(node);
    }

    public void caseTIs(TIs node)
    {
        defaultCase(node);
    }

    public void caseTNcompPrecedes(TNcompPrecedes node)
    {
        defaultCase(node);
    }

    public void caseTNcompFollows(TNcompFollows node)
    {
        defaultCase(node);
    }

    public void caseTAxisDelim(TAxisDelim node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTAbbrevRoot(TAbbrevRoot node)
    {
        defaultCase(node);
    }

    public void caseTAbbrevRootDesc(TAbbrevRootDesc node)
    {
        defaultCase(node);
    }

    public void caseTAbbrevAttrib(TAbbrevAttrib node)
    {
        defaultCase(node);
    }

    public void caseTAbbrevReversestep(TAbbrevReversestep node)
    {
        defaultCase(node);
    }

    public void caseTAbbrevContext(TAbbrevContext node)
    {
        defaultCase(node);
    }

    public void caseTAxisChild(TAxisChild node)
    {
        defaultCase(node);
    }

    public void caseTAxisDescendant(TAxisDescendant node)
    {
        defaultCase(node);
    }

    public void caseTAxisAttribute(TAxisAttribute node)
    {
        defaultCase(node);
    }

    public void caseTAxisSelf(TAxisSelf node)
    {
        defaultCase(node);
    }

    public void caseTAxisDescendantOrSelf(TAxisDescendantOrSelf node)
    {
        defaultCase(node);
    }

    public void caseTAxisFollowingSibling(TAxisFollowingSibling node)
    {
        defaultCase(node);
    }

    public void caseTAxisFollowing(TAxisFollowing node)
    {
        defaultCase(node);
    }

    public void caseTAxisNamespace(TAxisNamespace node)
    {
        defaultCase(node);
    }

    public void caseTAxisParent(TAxisParent node)
    {
        defaultCase(node);
    }

    public void caseTAxisAncestor(TAxisAncestor node)
    {
        defaultCase(node);
    }

    public void caseTAxisPrecedingSibling(TAxisPrecedingSibling node)
    {
        defaultCase(node);
    }

    public void caseTAxisPreceding(TAxisPreceding node)
    {
        defaultCase(node);
    }

    public void caseTAxisAncestorOrSelf(TAxisAncestorOrSelf node)
    {
        defaultCase(node);
    }

    public void caseTFnComment(TFnComment node)
    {
        defaultCase(node);
    }

    public void caseTFnDocumentNode(TFnDocumentNode node)
    {
        defaultCase(node);
    }

    public void caseTFnElement(TFnElement node)
    {
        defaultCase(node);
    }

    public void caseTFnEmptySequence(TFnEmptySequence node)
    {
        defaultCase(node);
    }

    public void caseTFnItem(TFnItem node)
    {
        defaultCase(node);
    }

    public void caseTFnNode(TFnNode node)
    {
        defaultCase(node);
    }

    public void caseTFnProcessingInstruction(TFnProcessingInstruction node)
    {
        defaultCase(node);
    }

    public void caseTFnSchemaAttribute(TFnSchemaAttribute node)
    {
        defaultCase(node);
    }

    public void caseTFnSchemaElement(TFnSchemaElement node)
    {
        defaultCase(node);
    }

    public void caseTFnText(TFnText node)
    {
        defaultCase(node);
    }

    public void caseTFnTypeswitch(TFnTypeswitch node)
    {
        defaultCase(node);
    }

    public void caseTXmlns(TXmlns node)
    {
        defaultCase(node);
    }

    public void caseTIntegerliteral(TIntegerliteral node)
    {
        defaultCase(node);
    }

    public void caseTLetter(TLetter node)
    {
        defaultCase(node);
    }

    public void caseTNcnamechar(TNcnamechar node)
    {
        defaultCase(node);
    }

    public void caseTUnderscore(TUnderscore node)
    {
        defaultCase(node);
    }

    public void caseTDecimalliteral(TDecimalliteral node)
    {
        defaultCase(node);
    }

    public void caseTDoubleliteral(TDoubleliteral node)
    {
        defaultCase(node);
    }

    public void caseTStringliteral(TStringliteral node)
    {
        defaultCase(node);
    }

    public void caseTWhitespace(TWhitespace node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
