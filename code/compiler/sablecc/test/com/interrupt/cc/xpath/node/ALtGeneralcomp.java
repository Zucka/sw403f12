/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class ALtGeneralcomp extends PGeneralcomp
{
    private TLtAbbrev _ltAbbrev_;

    public ALtGeneralcomp()
    {
        // Constructor
    }

    public ALtGeneralcomp(
        @SuppressWarnings("hiding") TLtAbbrev _ltAbbrev_)
    {
        // Constructor
        setLtAbbrev(_ltAbbrev_);

    }

    @Override
    public Object clone()
    {
        return new ALtGeneralcomp(
            cloneNode(this._ltAbbrev_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALtGeneralcomp(this);
    }

    public TLtAbbrev getLtAbbrev()
    {
        return this._ltAbbrev_;
    }

    public void setLtAbbrev(TLtAbbrev node)
    {
        if(this._ltAbbrev_ != null)
        {
            this._ltAbbrev_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ltAbbrev_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ltAbbrev_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ltAbbrev_ == child)
        {
            this._ltAbbrev_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ltAbbrev_ == oldChild)
        {
            setLtAbbrev((TLtAbbrev) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
