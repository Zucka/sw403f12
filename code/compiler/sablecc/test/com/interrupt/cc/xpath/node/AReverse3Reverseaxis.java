/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AReverse3Reverseaxis extends PReverseaxis
{
    private PReverseaxisPartThree _reverseaxisPartThree_;

    public AReverse3Reverseaxis()
    {
        // Constructor
    }

    public AReverse3Reverseaxis(
        @SuppressWarnings("hiding") PReverseaxisPartThree _reverseaxisPartThree_)
    {
        // Constructor
        setReverseaxisPartThree(_reverseaxisPartThree_);

    }

    @Override
    public Object clone()
    {
        return new AReverse3Reverseaxis(
            cloneNode(this._reverseaxisPartThree_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAReverse3Reverseaxis(this);
    }

    public PReverseaxisPartThree getReverseaxisPartThree()
    {
        return this._reverseaxisPartThree_;
    }

    public void setReverseaxisPartThree(PReverseaxisPartThree node)
    {
        if(this._reverseaxisPartThree_ != null)
        {
            this._reverseaxisPartThree_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._reverseaxisPartThree_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._reverseaxisPartThree_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._reverseaxisPartThree_ == child)
        {
            this._reverseaxisPartThree_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._reverseaxisPartThree_ == oldChild)
        {
            setReverseaxisPartThree((PReverseaxisPartThree) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
