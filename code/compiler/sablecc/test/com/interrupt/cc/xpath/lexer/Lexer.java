/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.lexer;

import java.io.*;
import com.interrupt.cc.xpath.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 68:
                        {
                            @SuppressWarnings("hiding") Token token = new68(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 69:
                        {
                            @SuppressWarnings("hiding") Token token = new69(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 70:
                        {
                            @SuppressWarnings("hiding") Token token = new70(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 71:
                        {
                            @SuppressWarnings("hiding") Token token = new71(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 72:
                        {
                            @SuppressWarnings("hiding") Token token = new72(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 73:
                        {
                            @SuppressWarnings("hiding") Token token = new73(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 74:
                        {
                            @SuppressWarnings("hiding") Token token = new74(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 75:
                        {
                            @SuppressWarnings("hiding") Token token = new75(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 76:
                        {
                            @SuppressWarnings("hiding") Token token = new76(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 77:
                        {
                            @SuppressWarnings("hiding") Token token = new77(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 78:
                        {
                            @SuppressWarnings("hiding") Token token = new78(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 79:
                        {
                            @SuppressWarnings("hiding") Token token = new79(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 80:
                        {
                            @SuppressWarnings("hiding") Token token = new80(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 81:
                        {
                            @SuppressWarnings("hiding") Token token = new81(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 82:
                        {
                            @SuppressWarnings("hiding") Token token = new82(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 83:
                        {
                            @SuppressWarnings("hiding") Token token = new83(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 84:
                        {
                            @SuppressWarnings("hiding") Token token = new84(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 85:
                        {
                            @SuppressWarnings("hiding") Token token = new85(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 86:
                        {
                            @SuppressWarnings("hiding") Token token = new86(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 87:
                        {
                            @SuppressWarnings("hiding") Token token = new87(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 88:
                        {
                            @SuppressWarnings("hiding") Token token = new88(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 89:
                        {
                            @SuppressWarnings("hiding") Token token = new89(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 90:
                        {
                            @SuppressWarnings("hiding") Token token = new90(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 91:
                        {
                            @SuppressWarnings("hiding") Token token = new91(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 92:
                        {
                            @SuppressWarnings("hiding") Token token = new92(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 93:
                        {
                            @SuppressWarnings("hiding") Token token = new93(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 94:
                        {
                            @SuppressWarnings("hiding") Token token = new94(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordReturn(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordFor(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordIn(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordIf(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordIs(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordSatisfies(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordThen(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordElse(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordOr(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordAnd(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordTo(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordDiv(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordIdiv(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordMod(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordUnion(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordIntersect(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordExcept(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordInstance(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordOf(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordTreat(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordAs(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordCastable(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordCast(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordSome(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TKeywordEvery(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDollar(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQuestion(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLparenth(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRparenth(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLbracket(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRbracket(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus2(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus2(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar2(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnion(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeAbbrev(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLtAbbrev(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeAbbrev(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGtAbbrev(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGeAbbrev(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNe(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLe(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGe(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIs(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNcompPrecedes(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNcompFollows(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisDelim(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbbrevRoot(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbbrevRootDesc(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbbrevAttrib(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbbrevReversestep(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbbrevContext(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisChild(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisDescendant(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisAttribute(line, pos); }
    Token new64(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisSelf(line, pos); }
    Token new65(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisDescendantOrSelf(line, pos); }
    Token new66(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisFollowingSibling(line, pos); }
    Token new67(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisFollowing(line, pos); }
    Token new68(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisNamespace(line, pos); }
    Token new69(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisParent(line, pos); }
    Token new70(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisAncestor(line, pos); }
    Token new71(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisPrecedingSibling(line, pos); }
    Token new72(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisPreceding(line, pos); }
    Token new73(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAxisAncestorOrSelf(line, pos); }
    Token new74(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnComment(line, pos); }
    Token new75(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnDocumentNode(line, pos); }
    Token new76(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnElement(line, pos); }
    Token new77(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnEmptySequence(line, pos); }
    Token new78(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnItem(line, pos); }
    Token new79(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnNode(line, pos); }
    Token new80(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnProcessingInstruction(line, pos); }
    Token new81(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnSchemaAttribute(line, pos); }
    Token new82(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnSchemaElement(line, pos); }
    Token new83(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnText(line, pos); }
    Token new84(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFnTypeswitch(line, pos); }
    Token new85(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXmlns(line, pos); }
    Token new86(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerliteral(text, line, pos); }
    Token new87(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLetter(text, line, pos); }
    Token new88(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNcnamechar(text, line, pos); }
    Token new89(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnderscore(line, pos); }
    Token new90(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDecimalliteral(text, line, pos); }
    Token new91(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoubleliteral(text, line, pos); }
    Token new92(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringliteral(text, line, pos); }
    Token new93(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhitespace(text, line, pos); }
    Token new94(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {36, 36, 7}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 63, 22}, {64, 64, 23}, {65, 90, 24}, {91, 91, 25}, {93, 93, 26}, {95, 95, 27}, {97, 97, 28}, {98, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 32}, {102, 102, 33}, {103, 103, 34}, {104, 104, 29}, {105, 105, 35}, {106, 107, 29}, {108, 108, 36}, {109, 109, 37}, {110, 110, 38}, {111, 111, 39}, {112, 112, 40}, {113, 113, 29}, {114, 114, 41}, {115, 115, 42}, {116, 116, 43}, {117, 117, 44}, {118, 119, 29}, {120, 120, 45}, {121, 122, 29}, {124, 124, 46}, {183, 183, 47}, {192, 214, 48}, {216, 246, 49}, {248, 255, 50}, {256, 305, 51}, {308, 318, 52}, {321, 328, 53}, {330, 382, 54}, {384, 451, 55}, {461, 496, 56}, {500, 501, 57}, {506, 535, 58}, {592, 680, 59}, {699, 705, 60}, {720, 720, 61}, {721, 721, 62}, {768, 837, 63}, {864, 865, 64}, {902, 902, 65}, {903, 903, 66}, {904, 906, 67}, {908, 908, 68}, {910, 929, 69}, {931, 974, 70}, {976, 982, 71}, {986, 986, 72}, {988, 988, 73}, {990, 990, 74}, {992, 992, 75}, {994, 1011, 76}, {1025, 1036, 77}, {1038, 1103, 78}, {1105, 1116, 79}, {1118, 1153, 80}, {1155, 1158, 81}, {1168, 1220, 82}, {1223, 1224, 83}, {1227, 1228, 84}, {1232, 1259, 85}, {1262, 1269, 86}, {1272, 1273, 87}, {1329, 1366, 88}, {1369, 1369, 89}, {1377, 1414, 90}, {1425, 1441, 91}, {1443, 1465, 92}, {1467, 1469, 93}, {1471, 1471, 94}, {1473, 1474, 95}, {1476, 1476, 96}, {1488, 1514, 97}, {1520, 1522, 98}, {1569, 1594, 99}, {1600, 1600, 100}, {1601, 1610, 101}, {1611, 1618, 102}, {1648, 1648, 103}, {1649, 1719, 104}, {1722, 1726, 105}, {1728, 1742, 106}, {1744, 1747, 107}, {1749, 1749, 108}, {1750, 1756, 109}, {1757, 1759, 110}, {1760, 1764, 111}, {1765, 1766, 112}, {1767, 1768, 113}, {1770, 1773, 114}, {2305, 2307, 115}, {2309, 2361, 116}, {2364, 2364, 117}, {2365, 2365, 118}, {2366, 2380, 119}, {2381, 2381, 120}, {2385, 2388, 121}, {2392, 2401, 122}, {2402, 2403, 123}, {2433, 2435, 124}, {2437, 2444, 125}, {2447, 2448, 126}, {2451, 2472, 127}, {2474, 2480, 128}, {2482, 2482, 129}, {2486, 2489, 130}, {2492, 2492, 131}, {2494, 2494, 132}, {2495, 2495, 133}, {2496, 2500, 134}, {2503, 2504, 135}, {2507, 2509, 136}, {2519, 2519, 137}, {2524, 2525, 138}, {2527, 2529, 139}, {2530, 2531, 140}, {2544, 2545, 141}, {2562, 2562, 142}, {2565, 2570, 143}, {2575, 2576, 144}, {2579, 2600, 145}, {2602, 2608, 146}, {2610, 2611, 147}, {2613, 2614, 148}, {2616, 2617, 149}, {2620, 2620, 150}, {2622, 2622, 151}, {2623, 2623, 152}, {2624, 2626, 153}, {2631, 2632, 154}, {2635, 2637, 155}, {2649, 2652, 156}, {2654, 2654, 157}, {2672, 2673, 158}, {2674, 2676, 159}, {2689, 2691, 160}, {2693, 2699, 161}, {2701, 2701, 162}, {2703, 2705, 163}, {2707, 2728, 164}, {2730, 2736, 165}, {2738, 2739, 166}, {2741, 2745, 167}, {2748, 2748, 168}, {2749, 2749, 169}, {2750, 2757, 170}, {2759, 2761, 171}, {2763, 2765, 172}, {2784, 2784, 173}, {2817, 2819, 174}, {2821, 2828, 175}, {2831, 2832, 176}, {2835, 2856, 177}, {2858, 2864, 178}, {2866, 2867, 179}, {2870, 2873, 180}, {2876, 2876, 181}, {2877, 2877, 182}, {2878, 2883, 183}, {2887, 2888, 184}, {2891, 2893, 185}, {2902, 2903, 186}, {2908, 2909, 187}, {2911, 2913, 188}, {2946, 2947, 189}, {2949, 2954, 190}, {2958, 2960, 191}, {2962, 2965, 192}, {2969, 2970, 193}, {2972, 2972, 194}, {2974, 2975, 195}, {2979, 2980, 196}, {2984, 2986, 197}, {2990, 2997, 198}, {2999, 3001, 199}, {3006, 3010, 200}, {3014, 3016, 201}, {3018, 3021, 202}, {3031, 3031, 203}, {3073, 3075, 204}, {3077, 3084, 205}, {3086, 3088, 206}, {3090, 3112, 207}, {3114, 3123, 208}, {3125, 3129, 209}, {3134, 3140, 210}, {3142, 3144, 211}, {3146, 3149, 212}, {3157, 3158, 213}, {3168, 3169, 214}, {3202, 3203, 215}, {3205, 3212, 216}, {3214, 3216, 217}, {3218, 3240, 218}, {3242, 3251, 219}, {3253, 3257, 220}, {3262, 3268, 221}, {3270, 3272, 222}, {3274, 3277, 223}, {3285, 3286, 224}, {3294, 3294, 225}, {3296, 3297, 226}, {3330, 3331, 227}, {3333, 3340, 228}, {3342, 3344, 229}, {3346, 3368, 230}, {3370, 3385, 231}, {3390, 3395, 232}, {3398, 3400, 233}, {3402, 3405, 234}, {3415, 3415, 235}, {3424, 3425, 236}, {3585, 3630, 237}, {3632, 3632, 238}, {3633, 3633, 239}, {3634, 3635, 240}, {3636, 3642, 241}, {3648, 3653, 242}, {3654, 3654, 243}, {3655, 3662, 244}, {3713, 3714, 245}, {3716, 3716, 246}, {3719, 3720, 247}, {3722, 3722, 248}, {3725, 3725, 249}, {3732, 3735, 250}, {3737, 3743, 251}, {3745, 3747, 252}, {3749, 3749, 253}, {3751, 3751, 254}, {3754, 3755, 255}, {3757, 3758, 256}, {3760, 3760, 257}, {3761, 3761, 258}, {3762, 3763, 259}, {3764, 3769, 260}, {3771, 3772, 261}, {3773, 3773, 262}, {3776, 3780, 263}, {3782, 3782, 264}, {3784, 3789, 265}, {3864, 3865, 266}, {3893, 3893, 267}, {3895, 3895, 268}, {3897, 3897, 269}, {3902, 3902, 270}, {3903, 3903, 271}, {3904, 3911, 272}, {3913, 3945, 273}, {3953, 3972, 274}, {3974, 3979, 275}, {3984, 3989, 276}, {3991, 3991, 277}, {3993, 4013, 278}, {4017, 4023, 279}, {4025, 4025, 280}, {4256, 4293, 281}, {4304, 4342, 282}, {4352, 4352, 283}, {4354, 4355, 284}, {4357, 4359, 285}, {4361, 4361, 286}, {4363, 4364, 287}, {4366, 4370, 288}, {4412, 4412, 289}, {4414, 4414, 290}, {4416, 4416, 291}, {4428, 4428, 292}, {4430, 4430, 293}, {4432, 4432, 294}, {4436, 4437, 295}, {4441, 4441, 296}, {4447, 4449, 297}, {4451, 4451, 298}, {4453, 4453, 299}, {4455, 4455, 300}, {4457, 4457, 301}, {4461, 4462, 302}, {4466, 4467, 303}, {4469, 4469, 304}, {4510, 4510, 305}, {4520, 4520, 306}, {4523, 4523, 307}, {4526, 4527, 308}, {4535, 4536, 309}, {4538, 4538, 310}, {4540, 4546, 311}, {4587, 4587, 312}, {4592, 4592, 313}, {4601, 4601, 314}, {7680, 7835, 315}, {7840, 7929, 316}, {7936, 7957, 317}, {7960, 7965, 318}, {7968, 8005, 319}, {8008, 8013, 320}, {8016, 8023, 321}, {8025, 8025, 322}, {8027, 8027, 323}, {8029, 8029, 324}, {8031, 8061, 325}, {8064, 8116, 326}, {8118, 8124, 327}, {8126, 8126, 328}, {8130, 8132, 329}, {8134, 8140, 330}, {8144, 8147, 331}, {8150, 8155, 332}, {8160, 8172, 333}, {8178, 8180, 334}, {8182, 8188, 335}, {8400, 8412, 336}, {8417, 8417, 337}, {8486, 8486, 338}, {8490, 8491, 339}, {8494, 8494, 340}, {8576, 8578, 341}, {12293, 12293, 342}, {12295, 12295, 343}, {12321, 12329, 344}, {12330, 12335, 345}, {12337, 12341, 346}, {12353, 12436, 347}, {12441, 12441, 348}, {12442, 12442, 349}, {12445, 12446, 350}, {12449, 12538, 351}, {12540, 12542, 352}, {12549, 12588, 353}, {19968, 40869, 354}, {44032, 55203, 355}, },
            {},
            {},
            {{10, 10, 356}, },
            {},
            {{61, 61, 357}, },
            {{34, 34, 358}, {45, 45, 359}, {46, 46, 360}, {48, 57, 361}, {58, 58, 362}, {65, 90, 363}, {95, 95, 364}, {97, 122, 365}, {183, 183, 366}, {192, 214, 367}, {216, 246, 368}, {248, 255, 369}, {256, 305, 370}, {308, 318, 371}, {321, 328, 372}, {330, 382, 373}, {384, 451, 374}, {461, 496, 375}, {500, 501, 376}, {506, 535, 377}, {592, 680, 378}, {699, 705, 379}, {720, 720, 380}, {721, 721, 381}, {768, 837, 382}, {864, 865, 383}, {902, 902, 384}, {903, 903, 385}, {904, 906, 386}, {908, 908, 387}, {910, 929, 388}, {931, 974, 389}, {976, 982, 390}, {986, 986, 391}, {988, 988, 392}, {990, 990, 393}, {992, 992, 394}, {994, 1011, 395}, {1025, 1036, 396}, {1038, 1103, 397}, {1105, 1116, 398}, {1118, 1153, 399}, {1155, 1158, 400}, {1168, 1220, 401}, {1223, 1224, 402}, {1227, 1228, 403}, {1232, 1259, 404}, {1262, 1269, 405}, {1272, 1273, 406}, {1329, 1366, 407}, {1369, 1369, 408}, {1377, 1414, 409}, {1425, 1441, 410}, {1443, 1465, 411}, {1467, 1469, 412}, {1471, 1471, 413}, {1473, 1474, 414}, {1476, 1476, 415}, {1488, 1514, 416}, {1520, 1522, 417}, {1569, 1594, 418}, {1600, 1600, 419}, {1601, 1610, 420}, {1611, 1618, 421}, {1648, 1648, 422}, {1649, 1719, 423}, {1722, 1726, 424}, {1728, 1742, 425}, {1744, 1747, 426}, {1749, 1749, 427}, {1750, 1756, 428}, {1757, 1759, 429}, {1760, 1764, 430}, {1765, 1766, 431}, {1767, 1768, 432}, {1770, 1773, 433}, {2305, 2307, 434}, {2309, 2361, 435}, {2364, 2364, 436}, {2365, 2365, 437}, {2366, 2380, 438}, {2381, 2381, 439}, {2385, 2388, 440}, {2392, 2401, 441}, {2402, 2403, 442}, {2433, 2435, 443}, {2437, 2444, 444}, {2447, 2448, 445}, {2451, 2472, 446}, {2474, 2480, 447}, {2482, 2482, 448}, {2486, 2489, 449}, {2492, 2492, 450}, {2494, 2494, 451}, {2495, 2495, 452}, {2496, 2500, 453}, {2503, 2504, 454}, {2507, 2509, 455}, {2519, 2519, 456}, {2524, 2525, 457}, {2527, 2529, 458}, {2530, 2531, 459}, {2544, 2545, 460}, {2562, 2562, 461}, {2565, 2570, 462}, {2575, 2576, 463}, {2579, 2600, 464}, {2602, 2608, 465}, {2610, 2611, 466}, {2613, 2614, 467}, {2616, 2617, 468}, {2620, 2620, 469}, {2622, 2622, 470}, {2623, 2623, 471}, {2624, 2626, 472}, {2631, 2632, 473}, {2635, 2637, 474}, {2649, 2652, 475}, {2654, 2654, 476}, {2672, 2673, 477}, {2674, 2676, 478}, {2689, 2691, 479}, {2693, 2699, 480}, {2701, 2701, 481}, {2703, 2705, 482}, {2707, 2728, 483}, {2730, 2736, 484}, {2738, 2739, 485}, {2741, 2745, 486}, {2748, 2748, 487}, {2749, 2749, 488}, {2750, 2757, 489}, {2759, 2761, 490}, {2763, 2765, 491}, {2784, 2784, 492}, {2817, 2819, 493}, {2821, 2828, 494}, {2831, 2832, 495}, {2835, 2856, 496}, {2858, 2864, 497}, {2866, 2867, 498}, {2870, 2873, 499}, {2876, 2876, 500}, {2877, 2877, 501}, {2878, 2883, 502}, {2887, 2888, 503}, {2891, 2893, 504}, {2902, 2903, 505}, {2908, 2909, 506}, {2911, 2913, 507}, {2946, 2947, 508}, {2949, 2954, 509}, {2958, 2960, 510}, {2962, 2965, 511}, {2969, 2970, 512}, {2972, 2972, 513}, {2974, 2975, 514}, {2979, 2980, 515}, {2984, 2986, 516}, {2990, 2997, 517}, {2999, 3001, 518}, {3006, 3010, 519}, {3014, 3016, 520}, {3018, 3021, 521}, {3031, 3031, 522}, {3073, 3075, 523}, {3077, 3084, 524}, {3086, 3088, 525}, {3090, 3112, 526}, {3114, 3123, 527}, {3125, 3129, 528}, {3134, 3140, 529}, {3142, 3144, 530}, {3146, 3149, 531}, {3157, 3158, 532}, {3168, 3169, 533}, {3202, 3203, 534}, {3205, 3212, 535}, {3214, 3216, 536}, {3218, 3240, 537}, {3242, 3251, 538}, {3253, 3257, 539}, {3262, 3268, 540}, {3270, 3272, 541}, {3274, 3277, 542}, {3285, 3286, 543}, {3294, 3294, 544}, {3296, 3297, 545}, {3330, 3331, 546}, {3333, 3340, 547}, {3342, 3344, 548}, {3346, 3368, 549}, {3370, 3385, 550}, {3390, 3395, 551}, {3398, 3400, 552}, {3402, 3405, 553}, {3415, 3415, 554}, {3424, 3425, 555}, {3585, 3630, 556}, {3632, 3632, 557}, {3633, 3633, 558}, {3634, 3635, 559}, {3636, 3642, 560}, {3648, 3653, 561}, {3654, 3654, 562}, {3655, 3662, 563}, {3713, 3714, 564}, {3716, 3716, 565}, {3719, 3720, 566}, {3722, 3722, 567}, {3725, 3725, 568}, {3732, 3735, 569}, {3737, 3743, 570}, {3745, 3747, 571}, {3749, 3749, 572}, {3751, 3751, 573}, {3754, 3755, 574}, {3757, 3758, 575}, {3760, 3760, 576}, {3761, 3761, 577}, {3762, 3763, 578}, {3764, 3769, 579}, {3771, 3772, 580}, {3773, 3773, 581}, {3776, 3780, 582}, {3782, 3782, 583}, {3784, 3789, 584}, {3864, 3865, 585}, {3893, 3893, 586}, {3895, 3895, 587}, {3897, 3897, 588}, {3902, 3902, 589}, {3903, 3903, 590}, {3904, 3911, 591}, {3913, 3945, 592}, {3953, 3972, 593}, {3974, 3979, 594}, {3984, 3989, 595}, {3991, 3991, 596}, {3993, 4013, 597}, {4017, 4023, 598}, {4025, 4025, 599}, {4256, 4293, 600}, {4304, 4342, 601}, {4352, 4352, 602}, {4354, 4355, 603}, {4357, 4359, 604}, {4361, 4361, 605}, {4363, 4364, 606}, {4366, 4370, 607}, {4412, 4412, 608}, {4414, 4414, 609}, {4416, 4416, 610}, {4428, 4428, 611}, {4430, 4430, 612}, {4432, 4432, 613}, {4436, 4437, 614}, {4441, 4441, 615}, {4447, 4449, 616}, {4451, 4451, 617}, {4453, 4453, 618}, {4455, 4455, 619}, {4457, 4457, 620}, {4461, 4462, 621}, {4466, 4467, 622}, {4469, 4469, 623}, {4510, 4510, 624}, {4520, 4520, 625}, {4523, 4523, 626}, {4526, 4527, 627}, {4535, 4536, 628}, {4538, 4538, 629}, {4540, 4546, 630}, {4587, 4587, 631}, {4592, 4592, 632}, {4601, 4601, 633}, {7680, 7835, 634}, {7840, 7929, 635}, {7936, 7957, 636}, {7960, 7965, 637}, {7968, 8005, 638}, {8008, 8013, 639}, {8016, 8023, 640}, {8025, 8025, 641}, {8027, 8027, 642}, {8029, 8029, 643}, {8031, 8061, 644}, {8064, 8116, 645}, {8118, 8124, 646}, {8126, 8126, 647}, {8130, 8132, 648}, {8134, 8140, 649}, {8144, 8147, 650}, {8150, 8155, 651}, {8160, 8172, 652}, {8178, 8180, 653}, {8182, 8188, 654}, {8400, 8412, 655}, {8417, 8417, 656}, {8486, 8486, 657}, {8490, 8491, 658}, {8494, 8494, 659}, {8576, 8578, 660}, {12293, 12293, 661}, {12295, 12295, 662}, {12321, 12329, 663}, {12330, 12335, 664}, {12337, 12341, 665}, {12353, 12436, 666}, {12441, 12441, 667}, {12442, 12442, 668}, {12445, 12446, 669}, {12449, 12538, 670}, {12540, 12542, 671}, {12549, 12588, 672}, {19968, 40869, 673}, {44032, 55203, 674}, },
            {},
            {{39, 39, 675}, {45, 45, 676}, {46, 46, 677}, {48, 57, 678}, {58, 58, 679}, {65, 90, 680}, {95, 95, 681}, {97, 122, 682}, {183, 183, 683}, {192, 214, 684}, {216, 246, 685}, {248, 255, 686}, {256, 305, 687}, {308, 318, 688}, {321, 328, 689}, {330, 382, 690}, {384, 451, 691}, {461, 496, 692}, {500, 501, 693}, {506, 535, 694}, {592, 680, 695}, {699, 705, 696}, {720, 720, 697}, {721, 721, 698}, {768, 837, 699}, {864, 865, 700}, {902, 902, 701}, {903, 903, 702}, {904, 906, 703}, {908, 908, 704}, {910, 929, 705}, {931, 974, 706}, {976, 982, 707}, {986, 986, 708}, {988, 988, 709}, {990, 990, 710}, {992, 992, 711}, {994, 1011, 712}, {1025, 1036, 713}, {1038, 1103, 714}, {1105, 1116, 715}, {1118, 1153, 716}, {1155, 1158, 717}, {1168, 1220, 718}, {1223, 1224, 719}, {1227, 1228, 720}, {1232, 1259, 721}, {1262, 1269, 722}, {1272, 1273, 723}, {1329, 1366, 724}, {1369, 1369, 725}, {1377, 1414, 726}, {1425, 1441, 727}, {1443, 1465, 728}, {1467, 1469, 729}, {1471, 1471, 730}, {1473, 1474, 731}, {1476, 1476, 732}, {1488, 1514, 733}, {1520, 1522, 734}, {1569, 1594, 735}, {1600, 1600, 736}, {1601, 1610, 737}, {1611, 1618, 738}, {1648, 1648, 739}, {1649, 1719, 740}, {1722, 1726, 741}, {1728, 1742, 742}, {1744, 1747, 743}, {1749, 1749, 744}, {1750, 1756, 745}, {1757, 1759, 746}, {1760, 1764, 747}, {1765, 1766, 748}, {1767, 1768, 749}, {1770, 1773, 750}, {2305, 2307, 751}, {2309, 2361, 752}, {2364, 2364, 753}, {2365, 2365, 754}, {2366, 2380, 755}, {2381, 2381, 756}, {2385, 2388, 757}, {2392, 2401, 758}, {2402, 2403, 759}, {2433, 2435, 760}, {2437, 2444, 761}, {2447, 2448, 762}, {2451, 2472, 763}, {2474, 2480, 764}, {2482, 2482, 765}, {2486, 2489, 766}, {2492, 2492, 767}, {2494, 2494, 768}, {2495, 2495, 769}, {2496, 2500, 770}, {2503, 2504, 771}, {2507, 2509, 772}, {2519, 2519, 773}, {2524, 2525, 774}, {2527, 2529, 775}, {2530, 2531, 776}, {2544, 2545, 777}, {2562, 2562, 778}, {2565, 2570, 779}, {2575, 2576, 780}, {2579, 2600, 781}, {2602, 2608, 782}, {2610, 2611, 783}, {2613, 2614, 784}, {2616, 2617, 785}, {2620, 2620, 786}, {2622, 2622, 787}, {2623, 2623, 788}, {2624, 2626, 789}, {2631, 2632, 790}, {2635, 2637, 791}, {2649, 2652, 792}, {2654, 2654, 793}, {2672, 2673, 794}, {2674, 2676, 795}, {2689, 2691, 796}, {2693, 2699, 797}, {2701, 2701, 798}, {2703, 2705, 799}, {2707, 2728, 800}, {2730, 2736, 801}, {2738, 2739, 802}, {2741, 2745, 803}, {2748, 2748, 804}, {2749, 2749, 805}, {2750, 2757, 806}, {2759, 2761, 807}, {2763, 2765, 808}, {2784, 2784, 809}, {2817, 2819, 810}, {2821, 2828, 811}, {2831, 2832, 812}, {2835, 2856, 813}, {2858, 2864, 814}, {2866, 2867, 815}, {2870, 2873, 816}, {2876, 2876, 817}, {2877, 2877, 818}, {2878, 2883, 819}, {2887, 2888, 820}, {2891, 2893, 821}, {2902, 2903, 822}, {2908, 2909, 823}, {2911, 2913, 824}, {2946, 2947, 825}, {2949, 2954, 826}, {2958, 2960, 827}, {2962, 2965, 828}, {2969, 2970, 829}, {2972, 2972, 830}, {2974, 2975, 831}, {2979, 2980, 832}, {2984, 2986, 833}, {2990, 2997, 834}, {2999, 3001, 835}, {3006, 3010, 836}, {3014, 3016, 837}, {3018, 3021, 838}, {3031, 3031, 839}, {3073, 3075, 840}, {3077, 3084, 841}, {3086, 3088, 842}, {3090, 3112, 843}, {3114, 3123, 844}, {3125, 3129, 845}, {3134, 3140, 846}, {3142, 3144, 847}, {3146, 3149, 848}, {3157, 3158, 849}, {3168, 3169, 850}, {3202, 3203, 851}, {3205, 3212, 852}, {3214, 3216, 853}, {3218, 3240, 854}, {3242, 3251, 855}, {3253, 3257, 856}, {3262, 3268, 857}, {3270, 3272, 858}, {3274, 3277, 859}, {3285, 3286, 860}, {3294, 3294, 861}, {3296, 3297, 862}, {3330, 3331, 863}, {3333, 3340, 864}, {3342, 3344, 865}, {3346, 3368, 866}, {3370, 3385, 867}, {3390, 3395, 868}, {3398, 3400, 869}, {3402, 3405, 870}, {3415, 3415, 871}, {3424, 3425, 872}, {3585, 3630, 873}, {3632, 3632, 874}, {3633, 3633, 875}, {3634, 3635, 876}, {3636, 3642, 877}, {3648, 3653, 878}, {3654, 3654, 879}, {3655, 3662, 880}, {3713, 3714, 881}, {3716, 3716, 882}, {3719, 3720, 883}, {3722, 3722, 884}, {3725, 3725, 885}, {3732, 3735, 886}, {3737, 3743, 887}, {3745, 3747, 888}, {3749, 3749, 889}, {3751, 3751, 890}, {3754, 3755, 891}, {3757, 3758, 892}, {3760, 3760, 893}, {3761, 3761, 894}, {3762, 3763, 895}, {3764, 3769, 896}, {3771, 3772, 897}, {3773, 3773, 898}, {3776, 3780, 899}, {3782, 3782, 900}, {3784, 3789, 901}, {3864, 3865, 902}, {3893, 3893, 903}, {3895, 3895, 904}, {3897, 3897, 905}, {3902, 3902, 906}, {3903, 3903, 907}, {3904, 3911, 908}, {3913, 3945, 909}, {3953, 3972, 910}, {3974, 3979, 911}, {3984, 3989, 912}, {3991, 3991, 913}, {3993, 4013, 914}, {4017, 4023, 915}, {4025, 4025, 916}, {4256, 4293, 917}, {4304, 4342, 918}, {4352, 4352, 919}, {4354, 4355, 920}, {4357, 4359, 921}, {4361, 4361, 922}, {4363, 4364, 923}, {4366, 4370, 924}, {4412, 4412, 925}, {4414, 4414, 926}, {4416, 4416, 927}, {4428, 4428, 928}, {4430, 4430, 929}, {4432, 4432, 930}, {4436, 4437, 931}, {4441, 4441, 932}, {4447, 4449, 933}, {4451, 4451, 934}, {4453, 4453, 935}, {4455, 4455, 936}, {4457, 4457, 937}, {4461, 4462, 938}, {4466, 4467, 939}, {4469, 4469, 940}, {4510, 4510, 941}, {4520, 4520, 942}, {4523, 4523, 943}, {4526, 4527, 944}, {4535, 4536, 945}, {4538, 4538, 946}, {4540, 4546, 947}, {4587, 4587, 948}, {4592, 4592, 949}, {4601, 4601, 950}, {7680, 7835, 951}, {7840, 7929, 952}, {7936, 7957, 953}, {7960, 7965, 954}, {7968, 8005, 955}, {8008, 8013, 956}, {8016, 8023, 957}, {8025, 8025, 958}, {8027, 8027, 959}, {8029, 8029, 960}, {8031, 8061, 961}, {8064, 8116, 962}, {8118, 8124, 963}, {8126, 8126, 964}, {8130, 8132, 965}, {8134, 8140, 966}, {8144, 8147, 967}, {8150, 8155, 968}, {8160, 8172, 969}, {8178, 8180, 970}, {8182, 8188, 971}, {8400, 8412, 972}, {8417, 8417, 973}, {8486, 8486, 974}, {8490, 8491, 975}, {8494, 8494, 976}, {8576, 8578, 977}, {12293, 12293, 978}, {12295, 12295, 979}, {12321, 12329, 980}, {12330, 12335, 981}, {12337, 12341, 982}, {12353, 12436, 983}, {12441, 12441, 984}, {12442, 12442, 985}, {12445, 12446, 986}, {12449, 12538, 987}, {12540, 12542, 988}, {12549, 12588, 989}, {19968, 40869, 990}, {44032, 55203, 991}, },
            {{58, 58, 992}, },
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 993}, {48, 57, 994}, },
            {{47, 47, 995}, },
            {{46, 46, 996}, {48, 57, 997}, {69, 69, 998}, {101, 101, 999}, },
            {{58, 58, 1000}, },
            {{60, 60, 1001}, {61, 61, 1002}, },
            {},
            {{61, 61, 1003}, {62, 62, 1004}, },
            {},
            {},
            {{65, 90, 1005}, {97, 122, 1006}, {192, 214, 1007}, {216, 246, 1008}, {248, 255, 1009}, {256, 305, 1010}, {308, 318, 1011}, {321, 328, 1012}, {330, 382, 1013}, {384, 451, 1014}, {461, 496, 1015}, {500, 501, 1016}, {506, 535, 1017}, {592, 680, 1018}, {699, 705, 1019}, {902, 902, 1020}, {904, 906, 1021}, {908, 908, 1022}, {910, 929, 1023}, {931, 974, 1024}, {976, 982, 1025}, {986, 986, 1026}, {988, 988, 1027}, {990, 990, 1028}, {992, 992, 1029}, {994, 1011, 1030}, {1025, 1036, 1031}, {1038, 1103, 1032}, {1105, 1116, 1033}, {1118, 1153, 1034}, {1168, 1220, 1035}, {1223, 1224, 1036}, {1227, 1228, 1037}, {1232, 1259, 1038}, {1262, 1269, 1039}, {1272, 1273, 1040}, {1329, 1366, 1041}, {1369, 1369, 1042}, {1377, 1414, 1043}, {1488, 1514, 1044}, {1520, 1522, 1045}, {1569, 1594, 1046}, {1601, 1610, 1047}, {1649, 1719, 1048}, {1722, 1726, 1049}, {1728, 1742, 1050}, {1744, 1747, 1051}, {1749, 1749, 1052}, {1765, 1766, 1053}, {2309, 2361, 1054}, {2365, 2365, 1055}, {2392, 2401, 1056}, {2437, 2444, 1057}, {2447, 2448, 1058}, {2451, 2472, 1059}, {2474, 2480, 1060}, {2482, 2482, 1061}, {2486, 2489, 1062}, {2524, 2525, 1063}, {2527, 2529, 1064}, {2544, 2545, 1065}, {2565, 2570, 1066}, {2575, 2576, 1067}, {2579, 2600, 1068}, {2602, 2608, 1069}, {2610, 2611, 1070}, {2613, 2614, 1071}, {2616, 2617, 1072}, {2649, 2652, 1073}, {2654, 2654, 1074}, {2674, 2676, 1075}, {2693, 2699, 1076}, {2701, 2701, 1077}, {2703, 2705, 1078}, {2707, 2728, 1079}, {2730, 2736, 1080}, {2738, 2739, 1081}, {2741, 2745, 1082}, {2749, 2749, 1083}, {2784, 2784, 1084}, {2821, 2828, 1085}, {2831, 2832, 1086}, {2835, 2856, 1087}, {2858, 2864, 1088}, {2866, 2867, 1089}, {2870, 2873, 1090}, {2877, 2877, 1091}, {2908, 2909, 1092}, {2911, 2913, 1093}, {2949, 2954, 1094}, {2958, 2960, 1095}, {2962, 2965, 1096}, {2969, 2970, 1097}, {2972, 2972, 1098}, {2974, 2975, 1099}, {2979, 2980, 1100}, {2984, 2986, 1101}, {2990, 2997, 1102}, {2999, 3001, 1103}, {3077, 3084, 1104}, {3086, 3088, 1105}, {3090, 3112, 1106}, {3114, 3123, 1107}, {3125, 3129, 1108}, {3168, 3169, 1109}, {3205, 3212, 1110}, {3214, 3216, 1111}, {3218, 3240, 1112}, {3242, 3251, 1113}, {3253, 3257, 1114}, {3294, 3294, 1115}, {3296, 3297, 1116}, {3333, 3340, 1117}, {3342, 3344, 1118}, {3346, 3368, 1119}, {3370, 3385, 1120}, {3424, 3425, 1121}, {3585, 3630, 1122}, {3632, 3632, 1123}, {3634, 3635, 1124}, {3648, 3653, 1125}, {3713, 3714, 1126}, {3716, 3716, 1127}, {3719, 3720, 1128}, {3722, 3722, 1129}, {3725, 3725, 1130}, {3732, 3735, 1131}, {3737, 3743, 1132}, {3745, 3747, 1133}, {3749, 3749, 1134}, {3751, 3751, 1135}, {3754, 3755, 1136}, {3757, 3758, 1137}, {3760, 3760, 1138}, {3762, 3763, 1139}, {3773, 3773, 1140}, {3776, 3780, 1141}, {3904, 3911, 1142}, {3913, 3945, 1143}, {4256, 4293, 1144}, {4304, 4342, 1145}, {4352, 4352, 1146}, {4354, 4355, 1147}, {4357, 4359, 1148}, {4361, 4361, 1149}, {4363, 4364, 1150}, {4366, 4370, 1151}, {4412, 4412, 1152}, {4414, 4414, 1153}, {4416, 4416, 1154}, {4428, 4428, 1155}, {4430, 4430, 1156}, {4432, 4432, 1157}, {4436, 4437, 1158}, {4441, 4441, 1159}, {4447, 4449, 1160}, {4451, 4451, 1161}, {4453, 4453, 1162}, {4455, 4455, 1163}, {4457, 4457, 1164}, {4461, 4462, 1165}, {4466, 4467, 1166}, {4469, 4469, 1167}, {4510, 4510, 1168}, {4520, 4520, 1169}, {4523, 4523, 1170}, {4526, 4527, 1171}, {4535, 4536, 1172}, {4538, 4538, 1173}, {4540, 4546, 1174}, {4587, 4587, 1175}, {4592, 4592, 1176}, {4601, 4601, 1177}, {7680, 7835, 1178}, {7840, 7929, 1179}, {7936, 7957, 1180}, {7960, 7965, 1181}, {7968, 8005, 1182}, {8008, 8013, 1183}, {8016, 8023, 1184}, {8025, 8025, 1185}, {8027, 8027, 1186}, {8029, 8029, 1187}, {8031, 8061, 1188}, {8064, 8116, 1189}, {8118, 8124, 1190}, {8126, 8126, 1191}, {8130, 8132, 1192}, {8134, 8140, 1193}, {8144, 8147, 1194}, {8150, 8155, 1195}, {8160, 8172, 1196}, {8178, 8180, 1197}, {8182, 8188, 1198}, {8486, 8486, 1199}, {8490, 8491, 1200}, {8494, 8494, 1201}, {8576, 8578, 1202}, {12353, 12436, 1203}, {12449, 12538, 1204}, {12549, 12588, 1205}, {44032, 55203, 1206}, },
            {},
            {},
            {},
            {{65, 90, 1005}, {97, 109, 1006}, {110, 110, 1207}, {111, 114, 1006}, {115, 115, 1208}, {116, 116, 1209}, {117, 122, 1006}, {192, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 97, 1210}, {98, 103, 1006}, {104, 104, 1211}, {105, 110, 1006}, {111, 111, 1212}, {112, 122, 1006}, {192, 55203, -26}, },
            {{65, 90, 1005}, {97, 100, 1006}, {101, 101, 1213}, {102, 104, 1006}, {105, 105, 1214}, {106, 110, 1006}, {111, 111, 1215}, {112, 55203, -32}, },
            {{65, 90, 1005}, {97, 107, 1006}, {108, 108, 1216}, {109, 109, 1217}, {110, 112, 1006}, {113, 113, 1218}, {114, 117, 1006}, {118, 118, 1219}, {119, 119, 1006}, {120, 120, 1220}, {121, 122, 1006}, {192, 55203, -26}, },
            {{65, 90, 1005}, {97, 110, 1006}, {111, 111, 1221}, {112, 55203, -32}, },
            {{65, 100, -33}, {101, 101, 1222}, {102, 115, 1006}, {116, 116, 1223}, {117, 55203, -30}, },
            {{65, 90, 1005}, {97, 99, 1006}, {100, 100, 1224}, {101, 101, 1006}, {102, 102, 1225}, {103, 109, 1006}, {110, 110, 1226}, {111, 114, 1006}, {115, 115, 1227}, {116, 116, 1228}, {117, 55203, -30}, },
            {{65, 100, -33}, {101, 101, 1229}, {102, 115, 1006}, {116, 116, 1230}, {117, 55203, -30}, },
            {{65, 110, -35}, {111, 111, 1231}, {112, 55203, -32}, },
            {{65, 90, 1005}, {97, 97, 1232}, {98, 100, 1006}, {101, 101, 1233}, {102, 110, 1006}, {111, 111, 1234}, {112, 55203, -32}, },
            {{65, 90, 1005}, {97, 101, 1006}, {102, 102, 1235}, {103, 113, 1006}, {114, 114, 1236}, {115, 122, 1006}, {192, 55203, -26}, },
            {{65, 90, 1005}, {97, 97, 1237}, {98, 113, 1006}, {114, 114, 1238}, {115, 55203, -41}, },
            {{65, 100, -33}, {101, 101, 1239}, {102, 122, 1006}, {192, 55203, -26}, },
            {{65, 90, 1005}, {97, 97, 1240}, {98, 98, 1006}, {99, 99, 1241}, {100, 100, 1006}, {101, 101, 1242}, {102, 110, 1006}, {111, 111, 1243}, {112, 55203, -32}, },
            {{65, 100, -33}, {101, 101, 1244}, {102, 103, 1006}, {104, 104, 1245}, {105, 110, 1006}, {111, 111, 1246}, {112, 113, 1006}, {114, 114, 1247}, {115, 120, 1006}, {121, 121, 1248}, {122, 122, 1006}, {192, 55203, -26}, },
            {{65, 109, -30}, {110, 110, 1249}, {111, 122, 1006}, {192, 55203, -26}, },
            {{65, 90, 1005}, {97, 108, 1006}, {109, 109, 1250}, {110, 122, 1006}, {192, 55203, -26}, },
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {{65, 55203, -26}, },
            {},
            {},
            {},
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {{34, 55203, -8}, },
            {},
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{39, 55203, -10}, },
            {{0, 0, 1251}, {9, 9, 1252}, {10, 10, 1253}, {13, 13, 1254}, {32, 32, 1255}, {58, 58, 1256}, {57344, 57344, 1257}, },
            {},
            {{48, 57, 1258}, {69, 101, -19}, },
            {},
            {{0, 0, 1259}, {48, 57, 1260}, {69, 101, -19}, },
            {{46, 46, 1261}, {48, 57, 997}, },
            {{43, 43, 1262}, {45, 45, 1263}, {48, 57, 1264}, },
            {{43, 57, -1000}, },
            {},
            {},
            {},
            {},
            {},
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 98, 1006}, {99, 99, 1265}, {100, 100, 1266}, {101, 122, 1006}, {192, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 115, 1006}, {116, 116, 1267}, {117, 55203, -30}, },
            {{65, 90, 1005}, {97, 114, 1006}, {115, 115, 1268}, {116, 122, 1006}, {192, 55203, -26}, },
            {{65, 90, 1005}, {97, 104, 1006}, {105, 105, 1269}, {106, 122, 1006}, {192, 55203, -26}, },
            {{65, 108, -47}, {109, 109, 1270}, {110, 55203, -47}, },
            {{65, 114, -1212}, {115, 115, 1271}, {116, 55203, -1212}, },
            {{65, 90, 1005}, {97, 117, 1006}, {118, 118, 1272}, {119, 122, 1006}, {192, 55203, -26}, },
            {{65, 98, -1209}, {99, 99, 1273}, {100, 122, 1006}, {192, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1274}, {102, 114, 1006}, {115, 115, 1275}, {116, 55203, -1212}, },
            {{65, 90, 1005}, {97, 111, 1006}, {112, 112, 1276}, {113, 122, 1006}, {192, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1277}, {102, 55203, -43}, },
            {{65, 98, -1209}, {99, 99, 1278}, {100, 55203, -1217}, },
            {{65, 107, -34}, {108, 108, 1279}, {109, 113, 1006}, {114, 114, 1280}, {115, 55203, -41}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 104, -1213}, {105, 105, 1281}, {106, 55203, -1213}, },
            {{65, 55203, -26}, },
            {{65, 114, -1212}, {115, 115, 1282}, {116, 116, 1283}, {117, 55203, -30}, },
            {{65, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1284}, {102, 55203, -43}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 99, -37}, {100, 100, 1285}, {101, 55203, -1209}, },
            {{65, 108, -47}, {109, 109, 1286}, {110, 55203, -47}, },
            {{65, 55203, -26}, },
            {{65, 99, -37}, {100, 100, 1287}, {101, 55203, -1209}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 113, 1006}, {114, 114, 1288}, {115, 55203, -41}, },
            {{65, 100, -33}, {101, 101, 1289}, {102, 110, 1006}, {111, 111, 1290}, {112, 55203, -32}, },
            {{65, 115, -1211}, {116, 116, 1291}, {117, 55203, -30}, },
            {{65, 115, -1211}, {116, 116, 1292}, {117, 55203, -30}, },
            {{65, 90, 1005}, {97, 103, 1006}, {104, 104, 1293}, {105, 122, 1006}, {192, 55203, -26}, },
            {{65, 107, -34}, {108, 108, 1294}, {109, 122, 1006}, {192, 55203, -26}, },
            {{65, 108, -47}, {109, 109, 1295}, {110, 55203, -47}, },
            {{65, 90, 1005}, {97, 119, 1006}, {120, 120, 1296}, {121, 55203, -34}, },
            {{65, 100, -33}, {101, 101, 1297}, {102, 55203, -43}, },
            {{65, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1298}, {102, 55203, -43}, },
            {{65, 111, -1219}, {112, 112, 1299}, {113, 55203, -1219}, },
            {{65, 104, -1213}, {105, 105, 1300}, {106, 55203, -1213}, },
            {{65, 107, -34}, {108, 108, 1301}, {109, 55203, -1244}, },
            {{0, 57344, -994}, },
            {{0, 57344, -994}, },
            {{0, 57344, -994}, },
            {{0, 57344, -994}, },
            {{0, 57344, -994}, },
            {{41, 41, 1302}, },
            {{0, 57344, -994}, },
            {{48, 57, 1258}, },
            {{0, 0, 1259}, {69, 101, -19}, },
            {{48, 57, 1260}, },
            {{48, 57, 1260}, },
            {{48, 57, 1264}, },
            {{48, 57, 1264}, },
            {},
            {{65, 100, -33}, {101, 101, 1303}, {102, 55203, -43}, },
            {{65, 55203, -26}, },
            {{65, 113, -1239}, {114, 114, 1304}, {115, 55203, -41}, },
            {{65, 115, -1211}, {116, 116, 1305}, {117, 55203, -30}, },
            {{65, 107, -34}, {108, 108, 1306}, {109, 55203, -1244}, },
            {{65, 108, -47}, {109, 109, 1307}, {110, 55203, -47}, },
            {{65, 98, -1209}, {99, 99, 1308}, {100, 55203, -1217}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 116, 1006}, {117, 117, 1309}, {118, 122, 1006}, {192, 55203, -26}, },
            {{65, 108, -47}, {109, 109, 1310}, {110, 55203, -47}, },
            {{65, 100, -33}, {101, 101, 1311}, {102, 55203, -43}, },
            {{65, 115, -1211}, {116, 116, 1312}, {117, 55203, -30}, },
            {{65, 113, -1239}, {114, 114, 1313}, {115, 55203, -41}, },
            {{65, 100, -33}, {101, 101, 1314}, {102, 55203, -43}, },
            {{65, 107, -34}, {108, 108, 1315}, {109, 55203, -1244}, },
            {{65, 55203, -26}, },
            {{65, 117, -1216}, {118, 118, 1316}, {119, 55203, -1216}, },
            {{65, 115, -1211}, {116, 116, 1317}, {117, 55203, -30}, },
            {{65, 100, -33}, {101, 101, 1318}, {102, 55203, -43}, },
            {{65, 108, -47}, {109, 109, 1319}, {110, 55203, -47}, },
            {{65, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1320}, {102, 55203, -43}, },
            {{65, 100, -33}, {101, 101, 1321}, {102, 55203, -43}, },
            {{65, 100, -33}, {101, 101, 1322}, {102, 55203, -43}, },
            {{65, 98, -1209}, {99, 99, 1323}, {100, 55203, -1217}, },
            {{65, 98, -1209}, {99, 99, 1324}, {100, 55203, -1217}, },
            {{65, 116, -1275}, {117, 117, 1325}, {118, 55203, -1275}, },
            {{65, 104, -1213}, {105, 105, 1326}, {106, 55203, -1213}, },
            {{65, 100, -33}, {101, 101, 1327}, {102, 55203, -43}, },
            {{65, 101, -41}, {102, 102, 1328}, {103, 122, 1006}, {192, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1329}, {102, 55203, -43}, },
            {{65, 115, -1211}, {116, 116, 1330}, {117, 55203, -30}, },
            {{65, 109, -30}, {110, 110, 1331}, {111, 55203, -46}, },
            {{65, 90, 1005}, {97, 97, 1332}, {98, 122, 1006}, {192, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1333}, {102, 55203, -43}, },
            {{65, 110, -35}, {111, 111, 1334}, {112, 55203, -32}, },
            {{65, 109, -30}, {110, 110, 1335}, {111, 55203, -46}, },
            {},
            {{65, 114, -1212}, {115, 115, 1336}, {116, 55203, -1212}, },
            {{65, 104, -1213}, {105, 105, 1337}, {106, 55203, -1213}, },
            {{65, 90, 1005}, {97, 97, 1338}, {98, 55203, -1300}, },
            {{65, 99, -37}, {100, 100, 1339}, {101, 55203, -1209}, },
            {{65, 100, -33}, {101, 101, 1340}, {102, 55203, -43}, },
            {{65, 100, -33}, {101, 101, 1341}, {102, 55203, -43}, },
            {{65, 108, -47}, {109, 109, 1342}, {110, 55203, -47}, },
            {{65, 100, -33}, {101, 101, 1343}, {102, 55203, -43}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 120, 1006}, {121, 121, 1344}, {122, 55203, -45}, },
            {{65, 120, -1314}, {121, 121, 1345}, {122, 55203, -45}, },
            {{65, 111, -1219}, {112, 112, 1346}, {113, 55203, -1219}, },
            {{65, 110, -35}, {111, 111, 1347}, {112, 55203, -32}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 97, 1348}, {98, 55203, -1300}, },
            {{65, 113, -1239}, {114, 114, 1349}, {115, 55203, -41}, },
            {{65, 55203, -26}, },
            {{65, 114, -1212}, {115, 115, 1350}, {116, 55203, -1212}, },
            {{65, 55203, -26}, },
            {{65, 109, -30}, {110, 110, 1351}, {111, 55203, -46}, },
            {{65, 100, -33}, {101, 101, 1352}, {102, 55203, -43}, },
            {{65, 100, -33}, {101, 101, 1353}, {102, 55203, -43}, },
            {{65, 113, -1239}, {114, 114, 1354}, {115, 55203, -41}, },
            {{65, 114, -1212}, {115, 115, 1355}, {116, 55203, -1212}, },
            {{65, 108, -47}, {109, 109, 1356}, {110, 55203, -47}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 115, -1211}, {116, 116, 1357}, {117, 55203, -30}, },
            {{65, 114, -1212}, {115, 115, 1358}, {116, 55203, -1212}, },
            {{65, 109, -30}, {110, 110, 1359}, {111, 55203, -46}, },
            {{65, 114, -1212}, {115, 115, 1360}, {116, 55203, -1212}, },
            {{65, 115, -1211}, {116, 116, 1361}, {117, 55203, -30}, },
            {{65, 90, 1005}, {97, 97, 1006}, {98, 98, 1362}, {99, 122, 1006}, {192, 55203, -26}, },
            {{65, 97, -1339}, {98, 98, 1363}, {99, 55203, -1339}, },
            {{65, 55203, -26}, },
            {{65, 109, -30}, {110, 110, 1364}, {111, 55203, -46}, },
            {{65, 109, -30}, {110, 110, 1365}, {111, 55203, -46}, },
            {{65, 100, -33}, {101, 101, 1366}, {102, 55203, -43}, },
            {{65, 109, -30}, {110, 110, 1367}, {111, 55203, -46}, },
            {{45, 45, 1368}, {65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 115, -1211}, {116, 116, 1369}, {117, 55203, -30}, },
            {{65, 90, 1005}, {97, 118, 1006}, {119, 119, 1370}, {120, 122, 1006}, {192, 55203, -26}, },
            {{65, 109, -30}, {110, 110, 1371}, {111, 55203, -46}, },
            {{65, 114, -1212}, {115, 115, 1372}, {116, 55203, -1212}, },
            {{65, 111, -1219}, {112, 112, 1373}, {113, 55203, -1219}, },
            {{65, 115, -1211}, {116, 116, 1374}, {117, 55203, -30}, },
            {{65, 99, -37}, {100, 100, 1375}, {101, 55203, -1209}, },
            {{65, 114, -1212}, {115, 115, 1376}, {116, 55203, -1212}, },
            {{65, 109, -30}, {110, 110, 1377}, {111, 55203, -46}, },
            {{65, 101, -41}, {102, 102, 1378}, {103, 55203, -1296}, },
            {{65, 90, 1005}, {97, 97, 1379}, {98, 55203, -1300}, },
            {{65, 55203, -26}, },
            {{65, 118, -1349}, {119, 119, 1380}, {120, 55203, -1349}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 110, -35}, {111, 111, 1381}, {112, 55203, -32}, },
            {{65, 116, -1275}, {117, 117, 1382}, {118, 55203, -1275}, },
            {{65, 107, -34}, {108, 108, 1383}, {109, 55203, -1244}, },
            {{65, 115, -1211}, {116, 116, 1384}, {117, 55203, -30}, },
            {{65, 99, -37}, {100, 100, 1385}, {101, 55203, -1209}, },
            {{65, 109, -30}, {110, 110, 1386}, {111, 55203, -46}, },
            {{65, 115, -1211}, {116, 116, 1387}, {117, 55203, -30}, },
            {{115, 115, 1388}, },
            {{65, 55203, -26}, },
            {{65, 104, -1213}, {105, 105, 1389}, {106, 55203, -1213}, },
            {{65, 98, -1209}, {99, 99, 1390}, {100, 55203, -1217}, },
            {{65, 100, -33}, {101, 101, 1391}, {102, 55203, -43}, },
            {{65, 90, 1005}, {97, 97, 1392}, {98, 55203, -1300}, },
            {{65, 55203, -26}, },
            {{65, 104, -1213}, {105, 105, 1393}, {106, 55203, -1213}, },
            {{65, 114, -1212}, {115, 115, 1394}, {116, 55203, -1212}, },
            {{65, 55203, -26}, },
            {{65, 104, -1213}, {105, 105, 1395}, {106, 55203, -1213}, },
            {{45, 45, 1396}, {65, 55203, -26}, },
            {{65, 104, -1213}, {105, 105, 1397}, {106, 55203, -1213}, },
            {{65, 113, -1239}, {114, 114, 1398}, {115, 55203, -41}, },
            {{65, 115, -1211}, {116, 116, 1399}, {117, 55203, -30}, },
            {{65, 100, -33}, {101, 101, 1400}, {102, 55203, -43}, },
            {{65, 55203, -26}, },
            {{65, 90, 1005}, {97, 97, 1401}, {98, 55203, -1300}, },
            {{65, 115, -1211}, {116, 116, 1402}, {117, 55203, -30}, },
            {{65, 55203, -26}, },
            {{101, 101, 1403}, },
            {{65, 109, -30}, {110, 110, 1404}, {111, 55203, -46}, },
            {{65, 100, -33}, {101, 101, 1405}, {102, 55203, -43}, },
            {{65, 98, -1209}, {99, 99, 1406}, {100, 55203, -1217}, },
            {{65, 98, -1209}, {99, 99, 1407}, {100, 55203, -1217}, },
            {{65, 109, -30}, {110, 110, 1408}, {111, 55203, -46}, },
            {{65, 104, -1213}, {105, 105, 1409}, {106, 55203, -1213}, },
            {{65, 100, -33}, {101, 101, 1410}, {102, 55203, -43}, },
            {{97, 97, 1411}, {101, 101, 1412}, },
            {{65, 115, -1211}, {116, 116, 1413}, {117, 55203, -30}, },
            {{45, 45, 1414}, {65, 55203, -26}, },
            {{65, 100, -33}, {101, 101, 1415}, {102, 55203, -43}, },
            {{65, 55203, -26}, },
            {{65, 109, -30}, {110, 110, 1416}, {111, 55203, -46}, },
            {{45, 45, 1417}, {65, 55203, -26}, },
            {{113, 113, 1418}, },
            {{65, 90, 1005}, {97, 102, 1006}, {103, 103, 1419}, {104, 122, 1006}, {192, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 115, -1211}, {116, 116, 1420}, {117, 55203, -30}, },
            {{65, 100, -33}, {101, 101, 1421}, {102, 55203, -43}, },
            {{65, 102, -1406}, {103, 103, 1422}, {104, 55203, -1406}, },
            {{65, 109, -30}, {110, 110, 1423}, {111, 55203, -46}, },
            {{65, 114, -1212}, {115, 115, 1424}, {116, 55203, -1212}, },
            {{116, 116, 1425}, },
            {{108, 108, 1426}, },
            {{65, 98, -1209}, {99, 99, 1427}, {100, 55203, -1217}, },
            {{111, 111, 1428}, },
            {{65, 55203, -26}, },
            {{65, 115, -1211}, {116, 116, 1429}, {117, 55203, -30}, },
            {{110, 110, 1430}, },
            {{117, 117, 1431}, },
            {{45, 45, 1432}, {65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{65, 55203, -26}, },
            {{45, 45, 1433}, {65, 55203, -26}, },
            {{65, 102, -1406}, {103, 103, 1434}, {104, 55203, -1406}, },
            {{65, 55203, -26}, },
            {{116, 116, 1435}, },
            {{101, 101, 1436}, },
            {{65, 103, -1243}, {104, 104, 1437}, {105, 55203, -1243}, },
            {{114, 114, 1438}, },
            {{45, 45, 1439}, {65, 55203, -26}, },
            {{111, 111, 1440}, },
            {{101, 101, 1441}, },
            {{115, 115, 1442}, },
            {{115, 115, 1443}, },
            {{45, 45, 1444}, {65, 55203, -26}, },
            {{114, 114, 1445}, },
            {{109, 109, 1446}, },
            {{65, 55203, -26}, },
            {{45, 45, 1447}, },
            {{111, 111, 1448}, },
            {{100, 100, 1449}, },
            {{110, 110, 1450}, },
            {{105, 105, 1451}, },
            {{105, 105, 1452}, },
            {{105, 105, 1453}, },
            {{105, 105, 1454}, },
            {{101, 101, 1455}, },
            {{115, 115, 1456}, },
            {{114, 114, 1457}, },
            {{101, 101, 1458}, },
            {{99, 99, 1459}, },
            {{98, 98, 1460}, },
            {{98, 98, 1461}, },
            {{110, 110, 1462}, },
            {{98, 98, 1463}, },
            {{110, 110, 1464}, },
            {{101, 101, 1465}, },
            {{45, 45, 1466}, },
            {},
            {{101, 101, 1467}, },
            {{108, 108, 1468}, },
            {{108, 108, 1469}, },
            {{115, 115, 1470}, },
            {{117, 117, 1471}, },
            {{116, 116, 1472}, },
            {{108, 108, 1473}, },
            {{115, 115, 1474}, },
            {},
            {{105, 105, 1475}, },
            {{105, 105, 1476}, },
            {{116, 116, 1477}, },
            {{116, 116, 1478}, },
            {},
            {{102, 102, 1479}, },
            {{101, 101, 1480}, },
            {{110, 110, 1481}, },
            {{110, 110, 1482}, },
            {{114, 114, 1483}, },
            {{101, 101, 1484}, },
            {},
            {{108, 108, 1485}, },
            {{103, 103, 1486}, },
            {{103, 103, 1487}, },
            {{117, 117, 1488}, },
            {},
            {{102, 102, 1489}, },
            {},
            {},
            {{99, 99, 1490}, },
            {},
            {{116, 116, 1491}, },
            {{105, 105, 1492}, },
            {{111, 111, 1493}, },
            {{110, 110, 1494}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 93, 93, 93, 93, -1, -1, 26, -1, 28, 29, 36, 32, 25, 34, 60, 56, 86, 55, 41, 39, 43, 27, 58, 87, 30, 31, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 38, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 87, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 87, 87, 87, 88, 87, 88, 88, 87, 87, 87, 87, 87, 88, 88, 88, 87, 88, 88, 88, 87, 88, 87, 88, 88, 88, 87, 88, 88, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 88, 87, 87, 88, 87, 88, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 87, 87, 88, 87, 88, 87, 87, 87, 87, 87, 87, 87, 88, 87, 88, 88, 88, 87, 88, 87, 87, 87, 87, 87, 87, 88, 87, 88, 88, 88, 88, 87, 87, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 87, 87, 87, 87, 87, 88, 88, 88, 88, 87, 88, 87, 87, 87, 87, 87, 88, 88, 88, 88, 87, 87, 88, 87, 87, 87, 87, 88, 88, 88, 88, 87, 87, 87, 88, 87, 88, 87, 88, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 87, 88, 88, 87, 87, 88, 88, 88, 88, 88, 88, 88, 88, 87, 87, 88, 88, 88, 88, 88, 88, 88, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 87, 87, 87, 87, 88, 88, 88, 88, 88, 87, 88, 88, 88, 87, 88, 87, 88, 87, 93, 40, 92, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 92, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 90, 57, 90, 86, -1, -1, 54, 52, 42, 44, 53, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 20, 87, 87, 87, 87, 87, 87, 87, 87, 87, 45, 87, 87, 87, 50, 49, 87, 3, 2, 4, 87, 48, 47, 87, 87, 46, 87, 18, 8, 87, 87, 87, 87, 87, 87, 87, 87, 87, 10, 87, 87, 87, 87, -1, -1, -1, -1, -1, -1, -1, 90, -1, 90, 90, -1, -1, 91, 87, 9, 87, 87, 87, 87, 87, 11, 87, 87, 87, 87, 87, 87, 87, 1, 87, 87, 87, 87, 13, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 94, 87, 87, 22, 87, 87, 87, 87, 87, 7, 87, 87, 87, 87, 12, 87, 87, 78, 87, 79, 87, 87, 87, 87, 87, 87, 64, 23, 83, 6, 87, 87, 87, 87, 87, 87, 87, 61, 87, 87, 87, 87, 87, 24, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 19, 87, 14, 85, 87, 87, 87, 87, 87, 87, 87, -1, 16, 87, 87, 87, 87, 69, 87, 87, 0, 87, 87, 87, 87, 87, 87, 74, 87, 87, 76, -1, 87, 87, 87, 87, 87, 87, 87, -1, 87, 70, 87, 21, 87, 87, -1, 87, 17, 87, 87, 87, 87, 87, -1, -1, 87, -1, 63, 87, -1, -1, 67, 15, 68, 72, 87, 5, -1, -1, 87, -1, 62, -1, -1, -1, -1, 87, -1, -1, 84, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, 77, -1, -1, -1, -1, 82, -1, -1, -1, -1, -1, -1, 73, -1, -1, -1, -1, 81, -1, 66, 71, -1, 65, -1, -1, -1, -1, 80, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
