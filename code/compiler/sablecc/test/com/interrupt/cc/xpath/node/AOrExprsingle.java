/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AOrExprsingle extends PExprsingle
{
    private POrexpr _orexpr_;

    public AOrExprsingle()
    {
        // Constructor
    }

    public AOrExprsingle(
        @SuppressWarnings("hiding") POrexpr _orexpr_)
    {
        // Constructor
        setOrexpr(_orexpr_);

    }

    @Override
    public Object clone()
    {
        return new AOrExprsingle(
            cloneNode(this._orexpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrExprsingle(this);
    }

    public POrexpr getOrexpr()
    {
        return this._orexpr_;
    }

    public void setOrexpr(POrexpr node)
    {
        if(this._orexpr_ != null)
        {
            this._orexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._orexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._orexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._orexpr_ == child)
        {
            this._orexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._orexpr_ == oldChild)
        {
            setOrexpr((POrexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
