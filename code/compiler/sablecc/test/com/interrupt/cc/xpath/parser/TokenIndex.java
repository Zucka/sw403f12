/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.parser;

import com.interrupt.cc.xpath.node.*;
import com.interrupt.cc.xpath.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTKeywordReturn(@SuppressWarnings("unused") TKeywordReturn node)
    {
        this.index = 0;
    }

    @Override
    public void caseTKeywordFor(@SuppressWarnings("unused") TKeywordFor node)
    {
        this.index = 1;
    }

    @Override
    public void caseTKeywordIn(@SuppressWarnings("unused") TKeywordIn node)
    {
        this.index = 2;
    }

    @Override
    public void caseTKeywordIf(@SuppressWarnings("unused") TKeywordIf node)
    {
        this.index = 3;
    }

    @Override
    public void caseTKeywordIs(@SuppressWarnings("unused") TKeywordIs node)
    {
        this.index = 4;
    }

    @Override
    public void caseTKeywordSatisfies(@SuppressWarnings("unused") TKeywordSatisfies node)
    {
        this.index = 5;
    }

    @Override
    public void caseTKeywordThen(@SuppressWarnings("unused") TKeywordThen node)
    {
        this.index = 6;
    }

    @Override
    public void caseTKeywordElse(@SuppressWarnings("unused") TKeywordElse node)
    {
        this.index = 7;
    }

    @Override
    public void caseTKeywordOr(@SuppressWarnings("unused") TKeywordOr node)
    {
        this.index = 8;
    }

    @Override
    public void caseTKeywordAnd(@SuppressWarnings("unused") TKeywordAnd node)
    {
        this.index = 9;
    }

    @Override
    public void caseTKeywordTo(@SuppressWarnings("unused") TKeywordTo node)
    {
        this.index = 10;
    }

    @Override
    public void caseTKeywordDiv(@SuppressWarnings("unused") TKeywordDiv node)
    {
        this.index = 11;
    }

    @Override
    public void caseTKeywordIdiv(@SuppressWarnings("unused") TKeywordIdiv node)
    {
        this.index = 12;
    }

    @Override
    public void caseTKeywordMod(@SuppressWarnings("unused") TKeywordMod node)
    {
        this.index = 13;
    }

    @Override
    public void caseTKeywordUnion(@SuppressWarnings("unused") TKeywordUnion node)
    {
        this.index = 14;
    }

    @Override
    public void caseTKeywordIntersect(@SuppressWarnings("unused") TKeywordIntersect node)
    {
        this.index = 15;
    }

    @Override
    public void caseTKeywordExcept(@SuppressWarnings("unused") TKeywordExcept node)
    {
        this.index = 16;
    }

    @Override
    public void caseTKeywordInstance(@SuppressWarnings("unused") TKeywordInstance node)
    {
        this.index = 17;
    }

    @Override
    public void caseTKeywordOf(@SuppressWarnings("unused") TKeywordOf node)
    {
        this.index = 18;
    }

    @Override
    public void caseTKeywordTreat(@SuppressWarnings("unused") TKeywordTreat node)
    {
        this.index = 19;
    }

    @Override
    public void caseTKeywordAs(@SuppressWarnings("unused") TKeywordAs node)
    {
        this.index = 20;
    }

    @Override
    public void caseTKeywordCastable(@SuppressWarnings("unused") TKeywordCastable node)
    {
        this.index = 21;
    }

    @Override
    public void caseTKeywordCast(@SuppressWarnings("unused") TKeywordCast node)
    {
        this.index = 22;
    }

    @Override
    public void caseTKeywordSome(@SuppressWarnings("unused") TKeywordSome node)
    {
        this.index = 23;
    }

    @Override
    public void caseTKeywordEvery(@SuppressWarnings("unused") TKeywordEvery node)
    {
        this.index = 24;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 25;
    }

    @Override
    public void caseTDollar(@SuppressWarnings("unused") TDollar node)
    {
        this.index = 26;
    }

    @Override
    public void caseTQuestion(@SuppressWarnings("unused") TQuestion node)
    {
        this.index = 27;
    }

    @Override
    public void caseTLparenth(@SuppressWarnings("unused") TLparenth node)
    {
        this.index = 28;
    }

    @Override
    public void caseTRparenth(@SuppressWarnings("unused") TRparenth node)
    {
        this.index = 29;
    }

    @Override
    public void caseTLbracket(@SuppressWarnings("unused") TLbracket node)
    {
        this.index = 30;
    }

    @Override
    public void caseTRbracket(@SuppressWarnings("unused") TRbracket node)
    {
        this.index = 31;
    }

    @Override
    public void caseTPlus2(@SuppressWarnings("unused") TPlus2 node)
    {
        this.index = 32;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 33;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 34;
    }

    @Override
    public void caseTMinus2(@SuppressWarnings("unused") TMinus2 node)
    {
        this.index = 35;
    }

    @Override
    public void caseTStar2(@SuppressWarnings("unused") TStar2 node)
    {
        this.index = 36;
    }

    @Override
    public void caseTStar(@SuppressWarnings("unused") TStar node)
    {
        this.index = 37;
    }

    @Override
    public void caseTUnion(@SuppressWarnings("unused") TUnion node)
    {
        this.index = 38;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 39;
    }

    @Override
    public void caseTNeAbbrev(@SuppressWarnings("unused") TNeAbbrev node)
    {
        this.index = 40;
    }

    @Override
    public void caseTLtAbbrev(@SuppressWarnings("unused") TLtAbbrev node)
    {
        this.index = 41;
    }

    @Override
    public void caseTLeAbbrev(@SuppressWarnings("unused") TLeAbbrev node)
    {
        this.index = 42;
    }

    @Override
    public void caseTGtAbbrev(@SuppressWarnings("unused") TGtAbbrev node)
    {
        this.index = 43;
    }

    @Override
    public void caseTGeAbbrev(@SuppressWarnings("unused") TGeAbbrev node)
    {
        this.index = 44;
    }

    @Override
    public void caseTEq(@SuppressWarnings("unused") TEq node)
    {
        this.index = 45;
    }

    @Override
    public void caseTNe(@SuppressWarnings("unused") TNe node)
    {
        this.index = 46;
    }

    @Override
    public void caseTLt(@SuppressWarnings("unused") TLt node)
    {
        this.index = 47;
    }

    @Override
    public void caseTLe(@SuppressWarnings("unused") TLe node)
    {
        this.index = 48;
    }

    @Override
    public void caseTGt(@SuppressWarnings("unused") TGt node)
    {
        this.index = 49;
    }

    @Override
    public void caseTGe(@SuppressWarnings("unused") TGe node)
    {
        this.index = 50;
    }

    @Override
    public void caseTIs(@SuppressWarnings("unused") TIs node)
    {
        this.index = 51;
    }

    @Override
    public void caseTNcompPrecedes(@SuppressWarnings("unused") TNcompPrecedes node)
    {
        this.index = 52;
    }

    @Override
    public void caseTNcompFollows(@SuppressWarnings("unused") TNcompFollows node)
    {
        this.index = 53;
    }

    @Override
    public void caseTAxisDelim(@SuppressWarnings("unused") TAxisDelim node)
    {
        this.index = 54;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 55;
    }

    @Override
    public void caseTAbbrevRoot(@SuppressWarnings("unused") TAbbrevRoot node)
    {
        this.index = 56;
    }

    @Override
    public void caseTAbbrevRootDesc(@SuppressWarnings("unused") TAbbrevRootDesc node)
    {
        this.index = 57;
    }

    @Override
    public void caseTAbbrevAttrib(@SuppressWarnings("unused") TAbbrevAttrib node)
    {
        this.index = 58;
    }

    @Override
    public void caseTAbbrevReversestep(@SuppressWarnings("unused") TAbbrevReversestep node)
    {
        this.index = 59;
    }

    @Override
    public void caseTAbbrevContext(@SuppressWarnings("unused") TAbbrevContext node)
    {
        this.index = 60;
    }

    @Override
    public void caseTAxisChild(@SuppressWarnings("unused") TAxisChild node)
    {
        this.index = 61;
    }

    @Override
    public void caseTAxisDescendant(@SuppressWarnings("unused") TAxisDescendant node)
    {
        this.index = 62;
    }

    @Override
    public void caseTAxisAttribute(@SuppressWarnings("unused") TAxisAttribute node)
    {
        this.index = 63;
    }

    @Override
    public void caseTAxisSelf(@SuppressWarnings("unused") TAxisSelf node)
    {
        this.index = 64;
    }

    @Override
    public void caseTAxisDescendantOrSelf(@SuppressWarnings("unused") TAxisDescendantOrSelf node)
    {
        this.index = 65;
    }

    @Override
    public void caseTAxisFollowingSibling(@SuppressWarnings("unused") TAxisFollowingSibling node)
    {
        this.index = 66;
    }

    @Override
    public void caseTAxisFollowing(@SuppressWarnings("unused") TAxisFollowing node)
    {
        this.index = 67;
    }

    @Override
    public void caseTAxisNamespace(@SuppressWarnings("unused") TAxisNamespace node)
    {
        this.index = 68;
    }

    @Override
    public void caseTAxisParent(@SuppressWarnings("unused") TAxisParent node)
    {
        this.index = 69;
    }

    @Override
    public void caseTAxisAncestor(@SuppressWarnings("unused") TAxisAncestor node)
    {
        this.index = 70;
    }

    @Override
    public void caseTAxisPrecedingSibling(@SuppressWarnings("unused") TAxisPrecedingSibling node)
    {
        this.index = 71;
    }

    @Override
    public void caseTAxisPreceding(@SuppressWarnings("unused") TAxisPreceding node)
    {
        this.index = 72;
    }

    @Override
    public void caseTAxisAncestorOrSelf(@SuppressWarnings("unused") TAxisAncestorOrSelf node)
    {
        this.index = 73;
    }

    @Override
    public void caseTFnComment(@SuppressWarnings("unused") TFnComment node)
    {
        this.index = 74;
    }

    @Override
    public void caseTFnDocumentNode(@SuppressWarnings("unused") TFnDocumentNode node)
    {
        this.index = 75;
    }

    @Override
    public void caseTFnElement(@SuppressWarnings("unused") TFnElement node)
    {
        this.index = 76;
    }

    @Override
    public void caseTFnEmptySequence(@SuppressWarnings("unused") TFnEmptySequence node)
    {
        this.index = 77;
    }

    @Override
    public void caseTFnItem(@SuppressWarnings("unused") TFnItem node)
    {
        this.index = 78;
    }

    @Override
    public void caseTFnNode(@SuppressWarnings("unused") TFnNode node)
    {
        this.index = 79;
    }

    @Override
    public void caseTFnProcessingInstruction(@SuppressWarnings("unused") TFnProcessingInstruction node)
    {
        this.index = 80;
    }

    @Override
    public void caseTFnSchemaAttribute(@SuppressWarnings("unused") TFnSchemaAttribute node)
    {
        this.index = 81;
    }

    @Override
    public void caseTFnSchemaElement(@SuppressWarnings("unused") TFnSchemaElement node)
    {
        this.index = 82;
    }

    @Override
    public void caseTFnText(@SuppressWarnings("unused") TFnText node)
    {
        this.index = 83;
    }

    @Override
    public void caseTFnTypeswitch(@SuppressWarnings("unused") TFnTypeswitch node)
    {
        this.index = 84;
    }

    @Override
    public void caseTXmlns(@SuppressWarnings("unused") TXmlns node)
    {
        this.index = 85;
    }

    @Override
    public void caseTIntegerliteral(@SuppressWarnings("unused") TIntegerliteral node)
    {
        this.index = 86;
    }

    @Override
    public void caseTLetter(@SuppressWarnings("unused") TLetter node)
    {
        this.index = 87;
    }

    @Override
    public void caseTNcnamechar(@SuppressWarnings("unused") TNcnamechar node)
    {
        this.index = 88;
    }

    @Override
    public void caseTUnderscore(@SuppressWarnings("unused") TUnderscore node)
    {
        this.index = 89;
    }

    @Override
    public void caseTDecimalliteral(@SuppressWarnings("unused") TDecimalliteral node)
    {
        this.index = 90;
    }

    @Override
    public void caseTDoubleliteral(@SuppressWarnings("unused") TDoubleliteral node)
    {
        this.index = 91;
    }

    @Override
    public void caseTStringliteral(@SuppressWarnings("unused") TStringliteral node)
    {
        this.index = 92;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 93;
    }
}
