/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AContextitemexpr extends PContextitemexpr
{
    private TAbbrevContext _abbrevContext_;

    public AContextitemexpr()
    {
        // Constructor
    }

    public AContextitemexpr(
        @SuppressWarnings("hiding") TAbbrevContext _abbrevContext_)
    {
        // Constructor
        setAbbrevContext(_abbrevContext_);

    }

    @Override
    public Object clone()
    {
        return new AContextitemexpr(
            cloneNode(this._abbrevContext_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAContextitemexpr(this);
    }

    public TAbbrevContext getAbbrevContext()
    {
        return this._abbrevContext_;
    }

    public void setAbbrevContext(TAbbrevContext node)
    {
        if(this._abbrevContext_ != null)
        {
            this._abbrevContext_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abbrevContext_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._abbrevContext_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._abbrevContext_ == child)
        {
            this._abbrevContext_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._abbrevContext_ == oldChild)
        {
            setAbbrevContext((TAbbrevContext) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
