/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AForward8Forwardaxis extends PForwardaxis
{
    private PForwardaxisPartEight _forwardaxisPartEight_;

    public AForward8Forwardaxis()
    {
        // Constructor
    }

    public AForward8Forwardaxis(
        @SuppressWarnings("hiding") PForwardaxisPartEight _forwardaxisPartEight_)
    {
        // Constructor
        setForwardaxisPartEight(_forwardaxisPartEight_);

    }

    @Override
    public Object clone()
    {
        return new AForward8Forwardaxis(
            cloneNode(this._forwardaxisPartEight_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForward8Forwardaxis(this);
    }

    public PForwardaxisPartEight getForwardaxisPartEight()
    {
        return this._forwardaxisPartEight_;
    }

    public void setForwardaxisPartEight(PForwardaxisPartEight node)
    {
        if(this._forwardaxisPartEight_ != null)
        {
            this._forwardaxisPartEight_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._forwardaxisPartEight_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._forwardaxisPartEight_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._forwardaxisPartEight_ == child)
        {
            this._forwardaxisPartEight_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._forwardaxisPartEight_ == oldChild)
        {
            setForwardaxisPartEight((PForwardaxisPartEight) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
