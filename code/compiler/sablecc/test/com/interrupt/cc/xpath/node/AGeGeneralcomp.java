/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AGeGeneralcomp extends PGeneralcomp
{
    private TGeAbbrev _geAbbrev_;

    public AGeGeneralcomp()
    {
        // Constructor
    }

    public AGeGeneralcomp(
        @SuppressWarnings("hiding") TGeAbbrev _geAbbrev_)
    {
        // Constructor
        setGeAbbrev(_geAbbrev_);

    }

    @Override
    public Object clone()
    {
        return new AGeGeneralcomp(
            cloneNode(this._geAbbrev_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGeGeneralcomp(this);
    }

    public TGeAbbrev getGeAbbrev()
    {
        return this._geAbbrev_;
    }

    public void setGeAbbrev(TGeAbbrev node)
    {
        if(this._geAbbrev_ != null)
        {
            this._geAbbrev_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._geAbbrev_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._geAbbrev_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._geAbbrev_ == child)
        {
            this._geAbbrev_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._geAbbrev_ == oldChild)
        {
            setGeAbbrev((TGeAbbrev) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
