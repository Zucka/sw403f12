/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AMultiplicativeexprPart extends PMultiplicativeexprPart
{
    private PMultiplicativeexprPartPart _multiplicativeexprPartPart_;
    private PUnionexpr _unionexpr_;

    public AMultiplicativeexprPart()
    {
        // Constructor
    }

    public AMultiplicativeexprPart(
        @SuppressWarnings("hiding") PMultiplicativeexprPartPart _multiplicativeexprPartPart_,
        @SuppressWarnings("hiding") PUnionexpr _unionexpr_)
    {
        // Constructor
        setMultiplicativeexprPartPart(_multiplicativeexprPartPart_);

        setUnionexpr(_unionexpr_);

    }

    @Override
    public Object clone()
    {
        return new AMultiplicativeexprPart(
            cloneNode(this._multiplicativeexprPartPart_),
            cloneNode(this._unionexpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiplicativeexprPart(this);
    }

    public PMultiplicativeexprPartPart getMultiplicativeexprPartPart()
    {
        return this._multiplicativeexprPartPart_;
    }

    public void setMultiplicativeexprPartPart(PMultiplicativeexprPartPart node)
    {
        if(this._multiplicativeexprPartPart_ != null)
        {
            this._multiplicativeexprPartPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multiplicativeexprPartPart_ = node;
    }

    public PUnionexpr getUnionexpr()
    {
        return this._unionexpr_;
    }

    public void setUnionexpr(PUnionexpr node)
    {
        if(this._unionexpr_ != null)
        {
            this._unionexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unionexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._multiplicativeexprPartPart_)
            + toString(this._unionexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._multiplicativeexprPartPart_ == child)
        {
            this._multiplicativeexprPartPart_ = null;
            return;
        }

        if(this._unionexpr_ == child)
        {
            this._unionexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._multiplicativeexprPartPart_ == oldChild)
        {
            setMultiplicativeexprPartPart((PMultiplicativeexprPartPart) newChild);
            return;
        }

        if(this._unionexpr_ == oldChild)
        {
            setUnionexpr((PUnionexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
