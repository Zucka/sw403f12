/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import java.util.*;
import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AQuantifiedexpr extends PQuantifiedexpr
{
    private PSomeEveryPart _someEveryPart_;
    private TDollar _dollar_;
    private PVarname _varname_;
    private TKeywordIn _keywordIn_;
    private PExprsingle _exprsingle1_;
    private final LinkedList<PQuantifiedexprPart> _quantifiedexprPart_ = new LinkedList<PQuantifiedexprPart>();
    private TKeywordSatisfies _keywordSatisfies_;
    private PExprsingle _exprsingle2_;

    public AQuantifiedexpr()
    {
        // Constructor
    }

    public AQuantifiedexpr(
        @SuppressWarnings("hiding") PSomeEveryPart _someEveryPart_,
        @SuppressWarnings("hiding") TDollar _dollar_,
        @SuppressWarnings("hiding") PVarname _varname_,
        @SuppressWarnings("hiding") TKeywordIn _keywordIn_,
        @SuppressWarnings("hiding") PExprsingle _exprsingle1_,
        @SuppressWarnings("hiding") List<PQuantifiedexprPart> _quantifiedexprPart_,
        @SuppressWarnings("hiding") TKeywordSatisfies _keywordSatisfies_,
        @SuppressWarnings("hiding") PExprsingle _exprsingle2_)
    {
        // Constructor
        setSomeEveryPart(_someEveryPart_);

        setDollar(_dollar_);

        setVarname(_varname_);

        setKeywordIn(_keywordIn_);

        setExprsingle1(_exprsingle1_);

        setQuantifiedexprPart(_quantifiedexprPart_);

        setKeywordSatisfies(_keywordSatisfies_);

        setExprsingle2(_exprsingle2_);

    }

    @Override
    public Object clone()
    {
        return new AQuantifiedexpr(
            cloneNode(this._someEveryPart_),
            cloneNode(this._dollar_),
            cloneNode(this._varname_),
            cloneNode(this._keywordIn_),
            cloneNode(this._exprsingle1_),
            cloneList(this._quantifiedexprPart_),
            cloneNode(this._keywordSatisfies_),
            cloneNode(this._exprsingle2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAQuantifiedexpr(this);
    }

    public PSomeEveryPart getSomeEveryPart()
    {
        return this._someEveryPart_;
    }

    public void setSomeEveryPart(PSomeEveryPart node)
    {
        if(this._someEveryPart_ != null)
        {
            this._someEveryPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._someEveryPart_ = node;
    }

    public TDollar getDollar()
    {
        return this._dollar_;
    }

    public void setDollar(TDollar node)
    {
        if(this._dollar_ != null)
        {
            this._dollar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dollar_ = node;
    }

    public PVarname getVarname()
    {
        return this._varname_;
    }

    public void setVarname(PVarname node)
    {
        if(this._varname_ != null)
        {
            this._varname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varname_ = node;
    }

    public TKeywordIn getKeywordIn()
    {
        return this._keywordIn_;
    }

    public void setKeywordIn(TKeywordIn node)
    {
        if(this._keywordIn_ != null)
        {
            this._keywordIn_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._keywordIn_ = node;
    }

    public PExprsingle getExprsingle1()
    {
        return this._exprsingle1_;
    }

    public void setExprsingle1(PExprsingle node)
    {
        if(this._exprsingle1_ != null)
        {
            this._exprsingle1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprsingle1_ = node;
    }

    public LinkedList<PQuantifiedexprPart> getQuantifiedexprPart()
    {
        return this._quantifiedexprPart_;
    }

    public void setQuantifiedexprPart(List<PQuantifiedexprPart> list)
    {
        this._quantifiedexprPart_.clear();
        this._quantifiedexprPart_.addAll(list);
        for(PQuantifiedexprPart e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public TKeywordSatisfies getKeywordSatisfies()
    {
        return this._keywordSatisfies_;
    }

    public void setKeywordSatisfies(TKeywordSatisfies node)
    {
        if(this._keywordSatisfies_ != null)
        {
            this._keywordSatisfies_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._keywordSatisfies_ = node;
    }

    public PExprsingle getExprsingle2()
    {
        return this._exprsingle2_;
    }

    public void setExprsingle2(PExprsingle node)
    {
        if(this._exprsingle2_ != null)
        {
            this._exprsingle2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprsingle2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._someEveryPart_)
            + toString(this._dollar_)
            + toString(this._varname_)
            + toString(this._keywordIn_)
            + toString(this._exprsingle1_)
            + toString(this._quantifiedexprPart_)
            + toString(this._keywordSatisfies_)
            + toString(this._exprsingle2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._someEveryPart_ == child)
        {
            this._someEveryPart_ = null;
            return;
        }

        if(this._dollar_ == child)
        {
            this._dollar_ = null;
            return;
        }

        if(this._varname_ == child)
        {
            this._varname_ = null;
            return;
        }

        if(this._keywordIn_ == child)
        {
            this._keywordIn_ = null;
            return;
        }

        if(this._exprsingle1_ == child)
        {
            this._exprsingle1_ = null;
            return;
        }

        if(this._quantifiedexprPart_.remove(child))
        {
            return;
        }

        if(this._keywordSatisfies_ == child)
        {
            this._keywordSatisfies_ = null;
            return;
        }

        if(this._exprsingle2_ == child)
        {
            this._exprsingle2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._someEveryPart_ == oldChild)
        {
            setSomeEveryPart((PSomeEveryPart) newChild);
            return;
        }

        if(this._dollar_ == oldChild)
        {
            setDollar((TDollar) newChild);
            return;
        }

        if(this._varname_ == oldChild)
        {
            setVarname((PVarname) newChild);
            return;
        }

        if(this._keywordIn_ == oldChild)
        {
            setKeywordIn((TKeywordIn) newChild);
            return;
        }

        if(this._exprsingle1_ == oldChild)
        {
            setExprsingle1((PExprsingle) newChild);
            return;
        }

        for(ListIterator<PQuantifiedexprPart> i = this._quantifiedexprPart_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PQuantifiedexprPart) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._keywordSatisfies_ == oldChild)
        {
            setKeywordSatisfies((TKeywordSatisfies) newChild);
            return;
        }

        if(this._exprsingle2_ == oldChild)
        {
            setExprsingle2((PExprsingle) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
