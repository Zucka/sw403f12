/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class ASequencetypePartTwo extends PSequencetypePartTwo
{
    private PItemtype _itemtype_;
    private POccurrenceindicator _occurrenceindicator_;

    public ASequencetypePartTwo()
    {
        // Constructor
    }

    public ASequencetypePartTwo(
        @SuppressWarnings("hiding") PItemtype _itemtype_,
        @SuppressWarnings("hiding") POccurrenceindicator _occurrenceindicator_)
    {
        // Constructor
        setItemtype(_itemtype_);

        setOccurrenceindicator(_occurrenceindicator_);

    }

    @Override
    public Object clone()
    {
        return new ASequencetypePartTwo(
            cloneNode(this._itemtype_),
            cloneNode(this._occurrenceindicator_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASequencetypePartTwo(this);
    }

    public PItemtype getItemtype()
    {
        return this._itemtype_;
    }

    public void setItemtype(PItemtype node)
    {
        if(this._itemtype_ != null)
        {
            this._itemtype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._itemtype_ = node;
    }

    public POccurrenceindicator getOccurrenceindicator()
    {
        return this._occurrenceindicator_;
    }

    public void setOccurrenceindicator(POccurrenceindicator node)
    {
        if(this._occurrenceindicator_ != null)
        {
            this._occurrenceindicator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._occurrenceindicator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._itemtype_)
            + toString(this._occurrenceindicator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._itemtype_ == child)
        {
            this._itemtype_ = null;
            return;
        }

        if(this._occurrenceindicator_ == child)
        {
            this._occurrenceindicator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._itemtype_ == oldChild)
        {
            setItemtype((PItemtype) newChild);
            return;
        }

        if(this._occurrenceindicator_ == oldChild)
        {
            setOccurrenceindicator((POccurrenceindicator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
