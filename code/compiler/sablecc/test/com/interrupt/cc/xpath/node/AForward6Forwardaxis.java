/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AForward6Forwardaxis extends PForwardaxis
{
    private PForwardaxisPartSix _forwardaxisPartSix_;

    public AForward6Forwardaxis()
    {
        // Constructor
    }

    public AForward6Forwardaxis(
        @SuppressWarnings("hiding") PForwardaxisPartSix _forwardaxisPartSix_)
    {
        // Constructor
        setForwardaxisPartSix(_forwardaxisPartSix_);

    }

    @Override
    public Object clone()
    {
        return new AForward6Forwardaxis(
            cloneNode(this._forwardaxisPartSix_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForward6Forwardaxis(this);
    }

    public PForwardaxisPartSix getForwardaxisPartSix()
    {
        return this._forwardaxisPartSix_;
    }

    public void setForwardaxisPartSix(PForwardaxisPartSix node)
    {
        if(this._forwardaxisPartSix_ != null)
        {
            this._forwardaxisPartSix_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._forwardaxisPartSix_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._forwardaxisPartSix_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._forwardaxisPartSix_ == child)
        {
            this._forwardaxisPartSix_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._forwardaxisPartSix_ == oldChild)
        {
            setForwardaxisPartSix((PForwardaxisPartSix) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
