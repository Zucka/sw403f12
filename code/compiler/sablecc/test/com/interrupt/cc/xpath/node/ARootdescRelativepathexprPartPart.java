/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class ARootdescRelativepathexprPartPart extends PRelativepathexprPartPart
{
    private TAbbrevRootDesc _abbrevRootDesc_;

    public ARootdescRelativepathexprPartPart()
    {
        // Constructor
    }

    public ARootdescRelativepathexprPartPart(
        @SuppressWarnings("hiding") TAbbrevRootDesc _abbrevRootDesc_)
    {
        // Constructor
        setAbbrevRootDesc(_abbrevRootDesc_);

    }

    @Override
    public Object clone()
    {
        return new ARootdescRelativepathexprPartPart(
            cloneNode(this._abbrevRootDesc_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARootdescRelativepathexprPartPart(this);
    }

    public TAbbrevRootDesc getAbbrevRootDesc()
    {
        return this._abbrevRootDesc_;
    }

    public void setAbbrevRootDesc(TAbbrevRootDesc node)
    {
        if(this._abbrevRootDesc_ != null)
        {
            this._abbrevRootDesc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abbrevRootDesc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._abbrevRootDesc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._abbrevRootDesc_ == child)
        {
            this._abbrevRootDesc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._abbrevRootDesc_ == oldChild)
        {
            setAbbrevRootDesc((TAbbrevRootDesc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
