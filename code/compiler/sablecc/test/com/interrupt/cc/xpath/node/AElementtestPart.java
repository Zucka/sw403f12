/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AElementtestPart extends PElementtestPart
{
    private PElementnameorwildcard _elementnameorwildcard_;
    private PElementtestPartPart _elementtestPartPart_;

    public AElementtestPart()
    {
        // Constructor
    }

    public AElementtestPart(
        @SuppressWarnings("hiding") PElementnameorwildcard _elementnameorwildcard_,
        @SuppressWarnings("hiding") PElementtestPartPart _elementtestPartPart_)
    {
        // Constructor
        setElementnameorwildcard(_elementnameorwildcard_);

        setElementtestPartPart(_elementtestPartPart_);

    }

    @Override
    public Object clone()
    {
        return new AElementtestPart(
            cloneNode(this._elementnameorwildcard_),
            cloneNode(this._elementtestPartPart_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAElementtestPart(this);
    }

    public PElementnameorwildcard getElementnameorwildcard()
    {
        return this._elementnameorwildcard_;
    }

    public void setElementnameorwildcard(PElementnameorwildcard node)
    {
        if(this._elementnameorwildcard_ != null)
        {
            this._elementnameorwildcard_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementnameorwildcard_ = node;
    }

    public PElementtestPartPart getElementtestPartPart()
    {
        return this._elementtestPartPart_;
    }

    public void setElementtestPartPart(PElementtestPartPart node)
    {
        if(this._elementtestPartPart_ != null)
        {
            this._elementtestPartPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elementtestPartPart_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._elementnameorwildcard_)
            + toString(this._elementtestPartPart_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._elementnameorwildcard_ == child)
        {
            this._elementnameorwildcard_ = null;
            return;
        }

        if(this._elementtestPartPart_ == child)
        {
            this._elementtestPartPart_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._elementnameorwildcard_ == oldChild)
        {
            setElementnameorwildcard((PElementnameorwildcard) newChild);
            return;
        }

        if(this._elementtestPartPart_ == oldChild)
        {
            setElementtestPartPart((PElementtestPartPart) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
