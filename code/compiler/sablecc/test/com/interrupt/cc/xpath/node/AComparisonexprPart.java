/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AComparisonexprPart extends PComparisonexprPart
{
    private PComparisonexprPartPart _comparisonexprPartPart_;
    private PRangeexpr _rangeexpr_;

    public AComparisonexprPart()
    {
        // Constructor
    }

    public AComparisonexprPart(
        @SuppressWarnings("hiding") PComparisonexprPartPart _comparisonexprPartPart_,
        @SuppressWarnings("hiding") PRangeexpr _rangeexpr_)
    {
        // Constructor
        setComparisonexprPartPart(_comparisonexprPartPart_);

        setRangeexpr(_rangeexpr_);

    }

    @Override
    public Object clone()
    {
        return new AComparisonexprPart(
            cloneNode(this._comparisonexprPartPart_),
            cloneNode(this._rangeexpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComparisonexprPart(this);
    }

    public PComparisonexprPartPart getComparisonexprPartPart()
    {
        return this._comparisonexprPartPart_;
    }

    public void setComparisonexprPartPart(PComparisonexprPartPart node)
    {
        if(this._comparisonexprPartPart_ != null)
        {
            this._comparisonexprPartPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comparisonexprPartPart_ = node;
    }

    public PRangeexpr getRangeexpr()
    {
        return this._rangeexpr_;
    }

    public void setRangeexpr(PRangeexpr node)
    {
        if(this._rangeexpr_ != null)
        {
            this._rangeexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rangeexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comparisonexprPartPart_)
            + toString(this._rangeexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comparisonexprPartPart_ == child)
        {
            this._comparisonexprPartPart_ = null;
            return;
        }

        if(this._rangeexpr_ == child)
        {
            this._rangeexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comparisonexprPartPart_ == oldChild)
        {
            setComparisonexprPartPart((PComparisonexprPartPart) newChild);
            return;
        }

        if(this._rangeexpr_ == oldChild)
        {
            setRangeexpr((PRangeexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
