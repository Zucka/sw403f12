/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AWild1Wildcard extends PWildcard
{
    private PWildcardPartOne _wildcardPartOne_;

    public AWild1Wildcard()
    {
        // Constructor
    }

    public AWild1Wildcard(
        @SuppressWarnings("hiding") PWildcardPartOne _wildcardPartOne_)
    {
        // Constructor
        setWildcardPartOne(_wildcardPartOne_);

    }

    @Override
    public Object clone()
    {
        return new AWild1Wildcard(
            cloneNode(this._wildcardPartOne_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWild1Wildcard(this);
    }

    public PWildcardPartOne getWildcardPartOne()
    {
        return this._wildcardPartOne_;
    }

    public void setWildcardPartOne(PWildcardPartOne node)
    {
        if(this._wildcardPartOne_ != null)
        {
            this._wildcardPartOne_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._wildcardPartOne_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._wildcardPartOne_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._wildcardPartOne_ == child)
        {
            this._wildcardPartOne_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._wildcardPartOne_ == oldChild)
        {
            setWildcardPartOne((PWildcardPartOne) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
