/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AAttributetestPart extends PAttributetestPart
{
    private PAttribnameorwildcard _attribnameorwildcard_;
    private PAttributetestPartPart _attributetestPartPart_;

    public AAttributetestPart()
    {
        // Constructor
    }

    public AAttributetestPart(
        @SuppressWarnings("hiding") PAttribnameorwildcard _attribnameorwildcard_,
        @SuppressWarnings("hiding") PAttributetestPartPart _attributetestPartPart_)
    {
        // Constructor
        setAttribnameorwildcard(_attribnameorwildcard_);

        setAttributetestPartPart(_attributetestPartPart_);

    }

    @Override
    public Object clone()
    {
        return new AAttributetestPart(
            cloneNode(this._attribnameorwildcard_),
            cloneNode(this._attributetestPartPart_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAttributetestPart(this);
    }

    public PAttribnameorwildcard getAttribnameorwildcard()
    {
        return this._attribnameorwildcard_;
    }

    public void setAttribnameorwildcard(PAttribnameorwildcard node)
    {
        if(this._attribnameorwildcard_ != null)
        {
            this._attribnameorwildcard_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attribnameorwildcard_ = node;
    }

    public PAttributetestPartPart getAttributetestPartPart()
    {
        return this._attributetestPartPart_;
    }

    public void setAttributetestPartPart(PAttributetestPartPart node)
    {
        if(this._attributetestPartPart_ != null)
        {
            this._attributetestPartPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attributetestPartPart_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._attribnameorwildcard_)
            + toString(this._attributetestPartPart_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._attribnameorwildcard_ == child)
        {
            this._attribnameorwildcard_ = null;
            return;
        }

        if(this._attributetestPartPart_ == child)
        {
            this._attributetestPartPart_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._attribnameorwildcard_ == oldChild)
        {
            setAttribnameorwildcard((PAttribnameorwildcard) newChild);
            return;
        }

        if(this._attributetestPartPart_ == oldChild)
        {
            setAttributetestPartPart((PAttributetestPartPart) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
