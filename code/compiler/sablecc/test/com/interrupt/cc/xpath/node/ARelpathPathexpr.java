/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class ARelpathPathexpr extends PPathexpr
{
    private PRelativepathexpr _relativepathexpr_;

    public ARelpathPathexpr()
    {
        // Constructor
    }

    public ARelpathPathexpr(
        @SuppressWarnings("hiding") PRelativepathexpr _relativepathexpr_)
    {
        // Constructor
        setRelativepathexpr(_relativepathexpr_);

    }

    @Override
    public Object clone()
    {
        return new ARelpathPathexpr(
            cloneNode(this._relativepathexpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARelpathPathexpr(this);
    }

    public PRelativepathexpr getRelativepathexpr()
    {
        return this._relativepathexpr_;
    }

    public void setRelativepathexpr(PRelativepathexpr node)
    {
        if(this._relativepathexpr_ != null)
        {
            this._relativepathexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relativepathexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._relativepathexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._relativepathexpr_ == child)
        {
            this._relativepathexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._relativepathexpr_ == oldChild)
        {
            setRelativepathexpr((PRelativepathexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
