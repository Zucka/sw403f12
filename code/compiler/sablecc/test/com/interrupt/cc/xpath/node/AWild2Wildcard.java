/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AWild2Wildcard extends PWildcard
{
    private PWildcardPartTwo _wildcardPartTwo_;

    public AWild2Wildcard()
    {
        // Constructor
    }

    public AWild2Wildcard(
        @SuppressWarnings("hiding") PWildcardPartTwo _wildcardPartTwo_)
    {
        // Constructor
        setWildcardPartTwo(_wildcardPartTwo_);

    }

    @Override
    public Object clone()
    {
        return new AWild2Wildcard(
            cloneNode(this._wildcardPartTwo_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWild2Wildcard(this);
    }

    public PWildcardPartTwo getWildcardPartTwo()
    {
        return this._wildcardPartTwo_;
    }

    public void setWildcardPartTwo(PWildcardPartTwo node)
    {
        if(this._wildcardPartTwo_ != null)
        {
            this._wildcardPartTwo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._wildcardPartTwo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._wildcardPartTwo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._wildcardPartTwo_ == child)
        {
            this._wildcardPartTwo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._wildcardPartTwo_ == oldChild)
        {
            setWildcardPartTwo((PWildcardPartTwo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
