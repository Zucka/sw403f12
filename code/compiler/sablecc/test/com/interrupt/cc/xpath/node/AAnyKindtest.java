/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AAnyKindtest extends PKindtest
{
    private PAkindtest _akindtest_;

    public AAnyKindtest()
    {
        // Constructor
    }

    public AAnyKindtest(
        @SuppressWarnings("hiding") PAkindtest _akindtest_)
    {
        // Constructor
        setAkindtest(_akindtest_);

    }

    @Override
    public Object clone()
    {
        return new AAnyKindtest(
            cloneNode(this._akindtest_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAnyKindtest(this);
    }

    public PAkindtest getAkindtest()
    {
        return this._akindtest_;
    }

    public void setAkindtest(PAkindtest node)
    {
        if(this._akindtest_ != null)
        {
            this._akindtest_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._akindtest_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._akindtest_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._akindtest_ == child)
        {
            this._akindtest_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._akindtest_ == oldChild)
        {
            setAkindtest((PAkindtest) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
