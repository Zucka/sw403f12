/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class ATreatexpr extends PTreatexpr
{
    private PCastableexpr _castableexpr_;
    private PTreatexprPart _treatexprPart_;

    public ATreatexpr()
    {
        // Constructor
    }

    public ATreatexpr(
        @SuppressWarnings("hiding") PCastableexpr _castableexpr_,
        @SuppressWarnings("hiding") PTreatexprPart _treatexprPart_)
    {
        // Constructor
        setCastableexpr(_castableexpr_);

        setTreatexprPart(_treatexprPart_);

    }

    @Override
    public Object clone()
    {
        return new ATreatexpr(
            cloneNode(this._castableexpr_),
            cloneNode(this._treatexprPart_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATreatexpr(this);
    }

    public PCastableexpr getCastableexpr()
    {
        return this._castableexpr_;
    }

    public void setCastableexpr(PCastableexpr node)
    {
        if(this._castableexpr_ != null)
        {
            this._castableexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._castableexpr_ = node;
    }

    public PTreatexprPart getTreatexprPart()
    {
        return this._treatexprPart_;
    }

    public void setTreatexprPart(PTreatexprPart node)
    {
        if(this._treatexprPart_ != null)
        {
            this._treatexprPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._treatexprPart_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._castableexpr_)
            + toString(this._treatexprPart_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._castableexpr_ == child)
        {
            this._castableexpr_ = null;
            return;
        }

        if(this._treatexprPart_ == child)
        {
            this._treatexprPart_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._castableexpr_ == oldChild)
        {
            setCastableexpr((PCastableexpr) newChild);
            return;
        }

        if(this._treatexprPart_ == oldChild)
        {
            setTreatexprPart((PTreatexprPart) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
