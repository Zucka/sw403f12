/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AWildcardPartTwo extends PWildcardPartTwo
{
    private TStar _star_;
    private TColon _colon_;
    private PNcname _ncname_;

    public AWildcardPartTwo()
    {
        // Constructor
    }

    public AWildcardPartTwo(
        @SuppressWarnings("hiding") TStar _star_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PNcname _ncname_)
    {
        // Constructor
        setStar(_star_);

        setColon(_colon_);

        setNcname(_ncname_);

    }

    @Override
    public Object clone()
    {
        return new AWildcardPartTwo(
            cloneNode(this._star_),
            cloneNode(this._colon_),
            cloneNode(this._ncname_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWildcardPartTwo(this);
    }

    public TStar getStar()
    {
        return this._star_;
    }

    public void setStar(TStar node)
    {
        if(this._star_ != null)
        {
            this._star_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._star_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PNcname getNcname()
    {
        return this._ncname_;
    }

    public void setNcname(PNcname node)
    {
        if(this._ncname_ != null)
        {
            this._ncname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ncname_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._star_)
            + toString(this._colon_)
            + toString(this._ncname_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._star_ == child)
        {
            this._star_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._ncname_ == child)
        {
            this._ncname_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._star_ == oldChild)
        {
            setStar((TStar) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._ncname_ == oldChild)
        {
            setNcname((PNcname) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
