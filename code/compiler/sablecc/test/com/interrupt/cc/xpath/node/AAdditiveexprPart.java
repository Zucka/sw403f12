/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.interrupt.cc.xpath.node;

import com.interrupt.cc.xpath.analysis.*;

@SuppressWarnings("nls")
public final class AAdditiveexprPart extends PAdditiveexprPart
{
    private PAdditiveexprPartPart _additiveexprPartPart_;
    private PMultiplicativeexpr _multiplicativeexpr_;

    public AAdditiveexprPart()
    {
        // Constructor
    }

    public AAdditiveexprPart(
        @SuppressWarnings("hiding") PAdditiveexprPartPart _additiveexprPartPart_,
        @SuppressWarnings("hiding") PMultiplicativeexpr _multiplicativeexpr_)
    {
        // Constructor
        setAdditiveexprPartPart(_additiveexprPartPart_);

        setMultiplicativeexpr(_multiplicativeexpr_);

    }

    @Override
    public Object clone()
    {
        return new AAdditiveexprPart(
            cloneNode(this._additiveexprPartPart_),
            cloneNode(this._multiplicativeexpr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAdditiveexprPart(this);
    }

    public PAdditiveexprPartPart getAdditiveexprPartPart()
    {
        return this._additiveexprPartPart_;
    }

    public void setAdditiveexprPartPart(PAdditiveexprPartPart node)
    {
        if(this._additiveexprPartPart_ != null)
        {
            this._additiveexprPartPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._additiveexprPartPart_ = node;
    }

    public PMultiplicativeexpr getMultiplicativeexpr()
    {
        return this._multiplicativeexpr_;
    }

    public void setMultiplicativeexpr(PMultiplicativeexpr node)
    {
        if(this._multiplicativeexpr_ != null)
        {
            this._multiplicativeexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multiplicativeexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._additiveexprPartPart_)
            + toString(this._multiplicativeexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._additiveexprPartPart_ == child)
        {
            this._additiveexprPartPart_ = null;
            return;
        }

        if(this._multiplicativeexpr_ == child)
        {
            this._multiplicativeexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._additiveexprPartPart_ == oldChild)
        {
            setAdditiveexprPartPart((PAdditiveexprPartPart) newChild);
            return;
        }

        if(this._multiplicativeexpr_ == oldChild)
        {
            setMultiplicativeexpr((PMultiplicativeexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
