/* This file was generated by SableCC (http://www.sablecc.org/). */

package nisse.node;

import nisse.analysis.*;

@SuppressWarnings("nls")
public final class AShortblockPlainsv1 extends PPlainsv1
{
    private PShortblock _shortblock_;

    public AShortblockPlainsv1()
    {
        // Constructor
    }

    public AShortblockPlainsv1(
        @SuppressWarnings("hiding") PShortblock _shortblock_)
    {
        // Constructor
        setShortblock(_shortblock_);

    }

    @Override
    public Object clone()
    {
        return new AShortblockPlainsv1(
            cloneNode(this._shortblock_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAShortblockPlainsv1(this);
    }

    public PShortblock getShortblock()
    {
        return this._shortblock_;
    }

    public void setShortblock(PShortblock node)
    {
        if(this._shortblock_ != null)
        {
            this._shortblock_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._shortblock_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._shortblock_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._shortblock_ == child)
        {
            this._shortblock_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._shortblock_ == oldChild)
        {
            setShortblock((PShortblock) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
