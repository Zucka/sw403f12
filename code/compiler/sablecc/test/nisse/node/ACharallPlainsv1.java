/* This file was generated by SableCC (http://www.sablecc.org/). */

package nisse.node;

import nisse.analysis.*;

@SuppressWarnings("nls")
public final class ACharallPlainsv1 extends PPlainsv1
{
    private PCharall _charall_;

    public ACharallPlainsv1()
    {
        // Constructor
    }

    public ACharallPlainsv1(
        @SuppressWarnings("hiding") PCharall _charall_)
    {
        // Constructor
        setCharall(_charall_);

    }

    @Override
    public Object clone()
    {
        return new ACharallPlainsv1(
            cloneNode(this._charall_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACharallPlainsv1(this);
    }

    public PCharall getCharall()
    {
        return this._charall_;
    }

    public void setCharall(PCharall node)
    {
        if(this._charall_ != null)
        {
            this._charall_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._charall_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._charall_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._charall_ == child)
        {
            this._charall_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._charall_ == oldChild)
        {
            setCharall((PCharall) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
