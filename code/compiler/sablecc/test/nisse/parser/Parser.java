/* This file was generated by SableCC (http://www.sablecc.org/). */

package nisse.parser;

import nisse.lexer.*;
import nisse.node.*;
import nisse.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAnisse1Nisse */
		    {
			ArrayList list = new0();
			push(goTo(0), list, false);
		    }
		    break;
                    case 1: /* reduce AAnisse2Nisse */
		    {
			ArrayList list = new1();
			push(goTo(0), list, false);
		    }
		    break;
                    case 2: /* reduce AAblockblocks1Blocks */
		    {
			ArrayList list = new2();
			push(goTo(1), list, false);
		    }
		    break;
                    case 3: /* reduce AAblockblocks2Blocks */
		    {
			ArrayList list = new3();
			push(goTo(1), list, false);
		    }
		    break;
                    case 4: /* reduce ASettingBlocks */
		    {
			ArrayList list = new4();
			push(goTo(1), list, false);
		    }
		    break;
                    case 5: /* reduce ASettingLines */
		    {
			ArrayList list = new5();
			push(goTo(2), list, false);
		    }
		    break;
                    case 6: /* reduce ANumerationLines */
		    {
			ArrayList list = new6();
			push(goTo(2), list, false);
		    }
		    break;
                    case 7: /* reduce AItemlistLines */
		    {
			ArrayList list = new7();
			push(goTo(2), list, false);
		    }
		    break;
                    case 8: /* reduce APlaintextLines */
		    {
			ArrayList list = new8();
			push(goTo(2), list, false);
		    }
		    break;
                    case 9: /* reduce ANumeration */
		    {
			ArrayList list = new9();
			push(goTo(3), list, false);
		    }
		    break;
                    case 10: /* reduce APlaintextNumerationv1 */
		    {
			ArrayList list = new10();
			push(goTo(4), list, false);
		    }
		    break;
                    case 11: /* reduce ANumerationNumerationv1 */
		    {
			ArrayList list = new11();
			push(goTo(4), list, false);
		    }
		    break;
                    case 12: /* reduce AItemlist */
		    {
			ArrayList list = new12();
			push(goTo(5), list, false);
		    }
		    break;
                    case 13: /* reduce APlaintextItemlistv1 */
		    {
			ArrayList list = new13();
			push(goTo(6), list, false);
		    }
		    break;
                    case 14: /* reduce AItemlistItemlistv1 */
		    {
			ArrayList list = new14();
			push(goTo(6), list, false);
		    }
		    break;
                    case 15: /* reduce ABeginblock */
		    {
			ArrayList list = new15();
			push(goTo(7), list, false);
		    }
		    break;
                    case 16: /* reduce AEndblock */
		    {
			ArrayList list = new16();
			push(goTo(8), list, false);
		    }
		    break;
                    case 17: /* reduce AAbeblock1Beblock */
		    {
			ArrayList list = new17();
			push(goTo(9), list, false);
		    }
		    break;
                    case 18: /* reduce AAbeblock2Beblock */
		    {
			ArrayList list = new18();
			push(goTo(9), list, false);
		    }
		    break;
                    case 19: /* reduce AAbeblock3Beblock */
		    {
			ArrayList list = new19();
			push(goTo(9), list, false);
		    }
		    break;
                    case 20: /* reduce AAbeblock4Beblock */
		    {
			ArrayList list = new20();
			push(goTo(9), list, false);
		    }
		    break;
                    case 21: /* reduce AAbeblock5Beblock */
		    {
			ArrayList list = new21();
			push(goTo(9), list, false);
		    }
		    break;
                    case 22: /* reduce AAbeblock6Beblock */
		    {
			ArrayList list = new22();
			push(goTo(9), list, false);
		    }
		    break;
                    case 23: /* reduce AAbeblock7Beblock */
		    {
			ArrayList list = new23();
			push(goTo(9), list, false);
		    }
		    break;
                    case 24: /* reduce AAbeblock8Beblock */
		    {
			ArrayList list = new24();
			push(goTo(9), list, false);
		    }
		    break;
                    case 25: /* reduce AAbeblockv11Beblockv1 */
		    {
			ArrayList list = new25();
			push(goTo(10), list, false);
		    }
		    break;
                    case 26: /* reduce AAbeblockv12Beblockv1 */
		    {
			ArrayList list = new26();
			push(goTo(10), list, false);
		    }
		    break;
                    case 27: /* reduce AAbeblockv13Beblockv1 */
		    {
			ArrayList list = new27();
			push(goTo(10), list, false);
		    }
		    break;
                    case 28: /* reduce AAbeblockv14Beblockv1 */
		    {
			ArrayList list = new28();
			push(goTo(10), list, false);
		    }
		    break;
                    case 29: /* reduce AAsettingblock1Settingblock */
		    {
			ArrayList list = new29();
			push(goTo(11), list, false);
		    }
		    break;
                    case 30: /* reduce AAsettingblock2Settingblock */
		    {
			ArrayList list = new30();
			push(goTo(11), list, false);
		    }
		    break;
                    case 31: /* reduce AAsettingblock3Settingblock */
		    {
			ArrayList list = new31();
			push(goTo(11), list, false);
		    }
		    break;
                    case 32: /* reduce AAsettingblock4Settingblock */
		    {
			ArrayList list = new32();
			push(goTo(11), list, false);
		    }
		    break;
                    case 33: /* reduce AAsettingblock5Settingblock */
		    {
			ArrayList list = new33();
			push(goTo(11), list, false);
		    }
		    break;
                    case 34: /* reduce AAsettingblock6Settingblock */
		    {
			ArrayList list = new34();
			push(goTo(11), list, false);
		    }
		    break;
                    case 35: /* reduce AAsettingblock7Settingblock */
		    {
			ArrayList list = new35();
			push(goTo(11), list, false);
		    }
		    break;
                    case 36: /* reduce AAsettingblock8Settingblock */
		    {
			ArrayList list = new36();
			push(goTo(11), list, false);
		    }
		    break;
                    case 37: /* reduce APlains */
		    {
			ArrayList list = new37();
			push(goTo(12), list, false);
		    }
		    break;
                    case 38: /* reduce AShortblockPlainsv1 */
		    {
			ArrayList list = new38();
			push(goTo(13), list, false);
		    }
		    break;
                    case 39: /* reduce ACharallPlainsv1 */
		    {
			ArrayList list = new39();
			push(goTo(13), list, false);
		    }
		    break;
                    case 40: /* reduce AAshortblock1Shortblock */
		    {
			ArrayList list = new40();
			push(goTo(14), list, false);
		    }
		    break;
                    case 41: /* reduce AAshortblock2Shortblock */
		    {
			ArrayList list = new41();
			push(goTo(14), list, false);
		    }
		    break;
                    case 42: /* reduce AShortblockv1 */
		    {
			ArrayList list = new42();
			push(goTo(15), list, false);
		    }
		    break;
                    case 43: /* reduce AShortidents */
		    {
			ArrayList list = new43();
			push(goTo(16), list, false);
		    }
		    break;
                    case 44: /* reduce AAshortident1Shortident */
		    {
			ArrayList list = new44();
			push(goTo(17), list, false);
		    }
		    break;
                    case 45: /* reduce AAshortident2Shortident */
		    {
			ArrayList list = new45();
			push(goTo(17), list, false);
		    }
		    break;
                    case 46: /* reduce AAshortident3Shortident */
		    {
			ArrayList list = new46();
			push(goTo(17), list, false);
		    }
		    break;
                    case 47: /* reduce AAshortident4Shortident */
		    {
			ArrayList list = new47();
			push(goTo(17), list, false);
		    }
		    break;
                    case 48: /* reduce ACharShortidentv1 */
		    {
			ArrayList list = new48();
			push(goTo(18), list, false);
		    }
		    break;
                    case 49: /* reduce ADigitShortidentv1 */
		    {
			ArrayList list = new49();
			push(goTo(18), list, false);
		    }
		    break;
                    case 50: /* reduce AKwd */
		    {
			ArrayList list = new50();
			push(goTo(19), list, false);
		    }
		    break;
                    case 51: /* reduce AColonCharall */
		    {
			ArrayList list = new51();
			push(goTo(20), list, false);
		    }
		    break;
                    case 52: /* reduce ADigitCharall */
		    {
			ArrayList list = new52();
			push(goTo(20), list, false);
		    }
		    break;
                    case 53: /* reduce ASemicolonCharall */
		    {
			ArrayList list = new53();
			push(goTo(20), list, false);
		    }
		    break;
                    case 54: /* reduce APercentCharall */
		    {
			ArrayList list = new54();
			push(goTo(20), list, false);
		    }
		    break;
                    case 55: /* reduce AForwardslashCharall */
		    {
			ArrayList list = new55();
			push(goTo(20), list, false);
		    }
		    break;
                    case 56: /* reduce ABackslashCharall */
		    {
			ArrayList list = new56();
			push(goTo(20), list, false);
		    }
		    break;
                    case 57: /* reduce AMorecharCharall */
		    {
			ArrayList list = new57();
			push(goTo(20), list, false);
		    }
		    break;
                    case 58: /* reduce ACharCharall */
		    {
			ArrayList list = new58();
			push(goTo(20), list, false);
		    }
		    break;
                    case 59: /* reduce ASpaceCharall */
		    {
			ArrayList list = new59();
			push(goTo(20), list, false);
		    }
		    break;
                    case 60: /* reduce ATerminal$Blocks */
		    {
			ArrayList list = new60();
			push(goTo(21), list, true);
		    }
		    break;
                    case 61: /* reduce ANonTerminal$Blocks */
		    {
			ArrayList list = new61();
			push(goTo(21), list, true);
		    }
		    break;
                    case 62: /* reduce ATerminal$Lines */
		    {
			ArrayList list = new62();
			push(goTo(22), list, true);
		    }
		    break;
                    case 63: /* reduce ANonTerminal$Lines */
		    {
			ArrayList list = new63();
			push(goTo(22), list, true);
		    }
		    break;
                    case 64: /* reduce ATerminal$Eol */
		    {
			ArrayList list = new64();
			push(goTo(23), list, true);
		    }
		    break;
                    case 65: /* reduce ANonTerminal$Eol */
		    {
			ArrayList list = new65();
			push(goTo(23), list, true);
		    }
		    break;
                    case 66: /* reduce ATerminal$Space */
		    {
			ArrayList list = new66();
			push(goTo(24), list, true);
		    }
		    break;
                    case 67: /* reduce ANonTerminal$Space */
		    {
			ArrayList list = new67();
			push(goTo(24), list, true);
		    }
		    break;
                    case 68: /* reduce ATerminal$Plainsv1 */
		    {
			ArrayList list = new68();
			push(goTo(25), list, true);
		    }
		    break;
                    case 69: /* reduce ANonTerminal$Plainsv1 */
		    {
			ArrayList list = new69();
			push(goTo(25), list, true);
		    }
		    break;
                    case 70: /* reduce ATerminal$Shortident */
		    {
			ArrayList list = new70();
			push(goTo(26), list, true);
		    }
		    break;
                    case 71: /* reduce ANonTerminal$Shortident */
		    {
			ArrayList list = new71();
			push(goTo(26), list, true);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PNisse node1 = (PNisse) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAnisse1Nisse */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PNisse pnisseNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pnisseNode1 = new ANisse(listNode2);
        }
	nodeList.add(pnisseNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAnisse2Nisse */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNisse pnisseNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pnisseNode1 = new ANisse(listNode3);
        }
	nodeList.add(pnisseNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAblockblocks1Blocks */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBlocks pblocksNode1;
        {
            // Block
        PBeginblock pbeginblockNode2;
        LinkedList listNode3 = new LinkedList();
        PEndblock pendblockNode4;
        pbeginblockNode2 = (PBeginblock)nodeArrayList1.get(0);
        {
            // Block
        }
        pendblockNode4 = (PEndblock)nodeArrayList2.get(0);

        pblocksNode1 = new ABlockBlocks(pbeginblockNode2, listNode3, pendblockNode4);
        }
	nodeList.add(pblocksNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAblockblocks2Blocks */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBlocks pblocksNode1;
        {
            // Block
        PBeginblock pbeginblockNode2;
        LinkedList listNode4 = new LinkedList();
        PEndblock pendblockNode5;
        pbeginblockNode2 = (PBeginblock)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pendblockNode5 = (PEndblock)nodeArrayList3.get(0);

        pblocksNode1 = new ABlockBlocks(pbeginblockNode2, listNode4, pendblockNode5);
        }
	nodeList.add(pblocksNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce ASettingBlocks */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBlocks pblocksNode1;
        {
            // Block
        PSettingblock psettingblockNode2;
        psettingblockNode2 = (PSettingblock)nodeArrayList1.get(0);

        pblocksNode1 = new ASettingBlocks(psettingblockNode2);
        }
	nodeList.add(pblocksNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce ASettingLines */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLines plinesNode1;
        {
            // Block
        PSettingblock psettingblockNode2;
        psettingblockNode2 = (PSettingblock)nodeArrayList1.get(0);

        plinesNode1 = new ASettingLines(psettingblockNode2);
        }
	nodeList.add(plinesNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce ANumerationLines */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLines plinesNode1;
        {
            // Block
        PNumeration pnumerationNode2;
        pnumerationNode2 = (PNumeration)nodeArrayList1.get(0);

        plinesNode1 = new ANumerationLines(pnumerationNode2);
        }
	nodeList.add(plinesNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AItemlistLines */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLines plinesNode1;
        {
            // Block
        PItemlist pitemlistNode2;
        pitemlistNode2 = (PItemlist)nodeArrayList1.get(0);

        plinesNode1 = new AItemlistLines(pitemlistNode2);
        }
	nodeList.add(plinesNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce APlaintextLines */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLines plinesNode1;
        {
            // Block
        PPlains pplainsNode2;
        TEol teolNode3;
        pplainsNode2 = (PPlains)nodeArrayList1.get(0);
        teolNode3 = (TEol)nodeArrayList2.get(0);

        plinesNode1 = new APlaintextLines(pplainsNode2, teolNode3);
        }
	nodeList.add(plinesNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce ANumeration */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNumeration pnumerationNode1;
        {
            // Block
        TNlist tnlistNode2;
        PNumerationv1 pnumerationv1Node3;
        tnlistNode2 = (TNlist)nodeArrayList1.get(0);
        pnumerationv1Node3 = (PNumerationv1)nodeArrayList2.get(0);

        pnumerationNode1 = new ANumeration(tnlistNode2, pnumerationv1Node3);
        }
	nodeList.add(pnumerationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce APlaintextNumerationv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNumerationv1 pnumerationv1Node1;
        {
            // Block
        PPlains pplainsNode2;
        TEol teolNode3;
        pplainsNode2 = (PPlains)nodeArrayList1.get(0);
        teolNode3 = (TEol)nodeArrayList2.get(0);

        pnumerationv1Node1 = new APlaintextNumerationv1(pplainsNode2, teolNode3);
        }
	nodeList.add(pnumerationv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce ANumerationNumerationv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNumerationv1 pnumerationv1Node1;
        {
            // Block
        PNumeration pnumerationNode2;
        pnumerationNode2 = (PNumeration)nodeArrayList1.get(0);

        pnumerationv1Node1 = new ANumerationNumerationv1(pnumerationNode2);
        }
	nodeList.add(pnumerationv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AItemlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PItemlist pitemlistNode1;
        {
            // Block
        TBlist tblistNode2;
        PItemlistv1 pitemlistv1Node3;
        tblistNode2 = (TBlist)nodeArrayList1.get(0);
        pitemlistv1Node3 = (PItemlistv1)nodeArrayList2.get(0);

        pitemlistNode1 = new AItemlist(tblistNode2, pitemlistv1Node3);
        }
	nodeList.add(pitemlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce APlaintextItemlistv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PItemlistv1 pitemlistv1Node1;
        {
            // Block
        PPlains pplainsNode2;
        TEol teolNode3;
        pplainsNode2 = (PPlains)nodeArrayList1.get(0);
        teolNode3 = (TEol)nodeArrayList2.get(0);

        pitemlistv1Node1 = new APlaintextItemlistv1(pplainsNode2, teolNode3);
        }
	nodeList.add(pitemlistv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AItemlistItemlistv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PItemlistv1 pitemlistv1Node1;
        {
            // Block
        PItemlist pitemlistNode2;
        pitemlistNode2 = (PItemlist)nodeArrayList1.get(0);

        pitemlistv1Node1 = new AItemlistItemlistv1(pitemlistNode2);
        }
	nodeList.add(pitemlistv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce ABeginblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeginblock pbeginblockNode1;
        {
            // Block
        TBeginkwd tbeginkwdNode2;
        PBeblock pbeblockNode3;
        TEol teolNode4;
        tbeginkwdNode2 = (TBeginkwd)nodeArrayList1.get(0);
        pbeblockNode3 = (PBeblock)nodeArrayList2.get(0);
        teolNode4 = (TEol)nodeArrayList3.get(0);

        pbeginblockNode1 = new ABeginblock(tbeginkwdNode2, pbeblockNode3, teolNode4);
        }
	nodeList.add(pbeginblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AEndblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEndblock pendblockNode1;
        {
            // Block
        TEndkwd tendkwdNode2;
        PBeblock pbeblockNode3;
        LinkedList listNode5 = new LinkedList();
        tendkwdNode2 = (TEndkwd)nodeArrayList1.get(0);
        pbeblockNode3 = (PBeblock)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pendblockNode1 = new AEndblock(tendkwdNode2, pbeblockNode3, listNode5);
        }
	nodeList.add(pendblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAbeblock1Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode3 = new LinkedList();
        TChar tcharNode4;
        LinkedList listNode5 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode6 = null;
        TRcurly trcurlyNode7;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        }
        tcharNode4 = (TChar)nodeArrayList2.get(0);
        {
            // Block
        }
        trcurlyNode7 = (TRcurly)nodeArrayList3.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode3, tcharNode4, listNode5, null, trcurlyNode7);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAbeblock2Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode4 = new LinkedList();
        TChar tcharNode5;
        LinkedList listNode6 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode7 = null;
        TRcurly trcurlyNode8;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcharNode5 = (TChar)nodeArrayList3.get(0);
        {
            // Block
        }
        trcurlyNode8 = (TRcurly)nodeArrayList4.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode4, tcharNode5, listNode6, null, trcurlyNode8);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAbeblock3Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode3 = new LinkedList();
        TChar tcharNode4;
        LinkedList listNode6 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode7 = null;
        TRcurly trcurlyNode8;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        }
        tcharNode4 = (TChar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trcurlyNode8 = (TRcurly)nodeArrayList4.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode3, tcharNode4, listNode6, null, trcurlyNode8);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAbeblock4Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode4 = new LinkedList();
        TChar tcharNode5;
        LinkedList listNode7 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode8 = null;
        TRcurly trcurlyNode9;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcharNode5 = (TChar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        trcurlyNode9 = (TRcurly)nodeArrayList5.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode4, tcharNode5, listNode7, null, trcurlyNode9);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAbeblock5Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode3 = new LinkedList();
        TChar tcharNode4;
        LinkedList listNode5 = new LinkedList();
        PBeblockv1 pbeblockv1Node6;
        TRcurly trcurlyNode7;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        }
        tcharNode4 = (TChar)nodeArrayList2.get(0);
        {
            // Block
        }
        pbeblockv1Node6 = (PBeblockv1)nodeArrayList3.get(0);
        trcurlyNode7 = (TRcurly)nodeArrayList4.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode3, tcharNode4, listNode5, pbeblockv1Node6, trcurlyNode7);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAbeblock6Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode4 = new LinkedList();
        TChar tcharNode5;
        LinkedList listNode6 = new LinkedList();
        PBeblockv1 pbeblockv1Node7;
        TRcurly trcurlyNode8;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcharNode5 = (TChar)nodeArrayList3.get(0);
        {
            // Block
        }
        pbeblockv1Node7 = (PBeblockv1)nodeArrayList4.get(0);
        trcurlyNode8 = (TRcurly)nodeArrayList5.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode4, tcharNode5, listNode6, pbeblockv1Node7, trcurlyNode8);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAbeblock7Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode3 = new LinkedList();
        TChar tcharNode4;
        LinkedList listNode6 = new LinkedList();
        PBeblockv1 pbeblockv1Node7;
        TRcurly trcurlyNode8;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        }
        tcharNode4 = (TChar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pbeblockv1Node7 = (PBeblockv1)nodeArrayList4.get(0);
        trcurlyNode8 = (TRcurly)nodeArrayList5.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode3, tcharNode4, listNode6, pbeblockv1Node7, trcurlyNode8);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AAbeblock8Beblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblock pbeblockNode1;
        {
            // Block
        TLcurly tlcurlyNode2;
        LinkedList listNode4 = new LinkedList();
        TChar tcharNode5;
        LinkedList listNode7 = new LinkedList();
        PBeblockv1 pbeblockv1Node8;
        TRcurly trcurlyNode9;
        tlcurlyNode2 = (TLcurly)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcharNode5 = (TChar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        pbeblockv1Node8 = (PBeblockv1)nodeArrayList5.get(0);
        trcurlyNode9 = (TRcurly)nodeArrayList6.get(0);

        pbeblockNode1 = new ABeblock(tlcurlyNode2, listNode4, tcharNode5, listNode7, pbeblockv1Node8, trcurlyNode9);
        }
	nodeList.add(pbeblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AAbeblockv11Beblockv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblockv1 pbeblockv1Node1;
        {
            // Block
        TPipe tpipeNode2;
        LinkedList listNode3 = new LinkedList();
        TChar tcharNode4;
        LinkedList listNode5 = new LinkedList();
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        {
            // Block
        }
        tcharNode4 = (TChar)nodeArrayList2.get(0);
        {
            // Block
        }

        pbeblockv1Node1 = new ABeblockv1(tpipeNode2, listNode3, tcharNode4, listNode5);
        }
	nodeList.add(pbeblockv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAbeblockv12Beblockv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblockv1 pbeblockv1Node1;
        {
            // Block
        TPipe tpipeNode2;
        LinkedList listNode4 = new LinkedList();
        TChar tcharNode5;
        LinkedList listNode6 = new LinkedList();
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcharNode5 = (TChar)nodeArrayList3.get(0);
        {
            // Block
        }

        pbeblockv1Node1 = new ABeblockv1(tpipeNode2, listNode4, tcharNode5, listNode6);
        }
	nodeList.add(pbeblockv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AAbeblockv13Beblockv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblockv1 pbeblockv1Node1;
        {
            // Block
        TPipe tpipeNode2;
        LinkedList listNode3 = new LinkedList();
        TChar tcharNode4;
        LinkedList listNode6 = new LinkedList();
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        {
            // Block
        }
        tcharNode4 = (TChar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pbeblockv1Node1 = new ABeblockv1(tpipeNode2, listNode3, tcharNode4, listNode6);
        }
	nodeList.add(pbeblockv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AAbeblockv14Beblockv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBeblockv1 pbeblockv1Node1;
        {
            // Block
        TPipe tpipeNode2;
        LinkedList listNode4 = new LinkedList();
        TChar tcharNode5;
        LinkedList listNode7 = new LinkedList();
        tpipeNode2 = (TPipe)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcharNode5 = (TChar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pbeblockv1Node1 = new ABeblockv1(tpipeNode2, listNode4, tcharNode5, listNode7);
        }
	nodeList.add(pbeblockv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AAsettingblock1Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode5 = new LinkedList();
        TPipe tpipeNode6;
        LinkedList listNode7 = new LinkedList();
        TChar tcharNode8;
        LinkedList listNode9 = new LinkedList();
        TRcurly trcurlyNode10;
        TEol teolNode11;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        }
        tpipeNode6 = (TPipe)nodeArrayList4.get(0);
        {
            // Block
        }
        tcharNode8 = (TChar)nodeArrayList5.get(0);
        {
            // Block
        }
        trcurlyNode10 = (TRcurly)nodeArrayList6.get(0);
        teolNode11 = (TEol)nodeArrayList7.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode5, tpipeNode6, listNode7, tcharNode8, listNode9, trcurlyNode10, teolNode11);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AAsettingblock2Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode6 = new LinkedList();
        TPipe tpipeNode7;
        LinkedList listNode8 = new LinkedList();
        TChar tcharNode9;
        LinkedList listNode10 = new LinkedList();
        TRcurly trcurlyNode11;
        TEol teolNode12;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tpipeNode7 = (TPipe)nodeArrayList5.get(0);
        {
            // Block
        }
        tcharNode9 = (TChar)nodeArrayList6.get(0);
        {
            // Block
        }
        trcurlyNode11 = (TRcurly)nodeArrayList7.get(0);
        teolNode12 = (TEol)nodeArrayList8.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode6, tpipeNode7, listNode8, tcharNode9, listNode10, trcurlyNode11, teolNode12);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AAsettingblock3Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode5 = new LinkedList();
        TPipe tpipeNode6;
        LinkedList listNode8 = new LinkedList();
        TChar tcharNode9;
        LinkedList listNode10 = new LinkedList();
        TRcurly trcurlyNode11;
        TEol teolNode12;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        }
        tpipeNode6 = (TPipe)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tcharNode9 = (TChar)nodeArrayList6.get(0);
        {
            // Block
        }
        trcurlyNode11 = (TRcurly)nodeArrayList7.get(0);
        teolNode12 = (TEol)nodeArrayList8.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode5, tpipeNode6, listNode8, tcharNode9, listNode10, trcurlyNode11, teolNode12);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AAsettingblock4Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode6 = new LinkedList();
        TPipe tpipeNode7;
        LinkedList listNode9 = new LinkedList();
        TChar tcharNode10;
        LinkedList listNode11 = new LinkedList();
        TRcurly trcurlyNode12;
        TEol teolNode13;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tpipeNode7 = (TPipe)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        tcharNode10 = (TChar)nodeArrayList7.get(0);
        {
            // Block
        }
        trcurlyNode12 = (TRcurly)nodeArrayList8.get(0);
        teolNode13 = (TEol)nodeArrayList9.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode6, tpipeNode7, listNode9, tcharNode10, listNode11, trcurlyNode12, teolNode13);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAsettingblock5Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode5 = new LinkedList();
        TPipe tpipeNode6;
        LinkedList listNode7 = new LinkedList();
        TChar tcharNode8;
        LinkedList listNode10 = new LinkedList();
        TRcurly trcurlyNode11;
        TEol teolNode12;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        }
        tpipeNode6 = (TPipe)nodeArrayList4.get(0);
        {
            // Block
        }
        tcharNode8 = (TChar)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList6.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        trcurlyNode11 = (TRcurly)nodeArrayList7.get(0);
        teolNode12 = (TEol)nodeArrayList8.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode5, tpipeNode6, listNode7, tcharNode8, listNode10, trcurlyNode11, teolNode12);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AAsettingblock6Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode6 = new LinkedList();
        TPipe tpipeNode7;
        LinkedList listNode8 = new LinkedList();
        TChar tcharNode9;
        LinkedList listNode11 = new LinkedList();
        TRcurly trcurlyNode12;
        TEol teolNode13;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tpipeNode7 = (TPipe)nodeArrayList5.get(0);
        {
            // Block
        }
        tcharNode9 = (TChar)nodeArrayList6.get(0);
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList7.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        trcurlyNode12 = (TRcurly)nodeArrayList8.get(0);
        teolNode13 = (TEol)nodeArrayList9.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode6, tpipeNode7, listNode8, tcharNode9, listNode11, trcurlyNode12, teolNode13);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AAsettingblock7Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode5 = new LinkedList();
        TPipe tpipeNode6;
        LinkedList listNode8 = new LinkedList();
        TChar tcharNode9;
        LinkedList listNode11 = new LinkedList();
        TRcurly trcurlyNode12;
        TEol teolNode13;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        }
        tpipeNode6 = (TPipe)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tcharNode9 = (TChar)nodeArrayList6.get(0);
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList7.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        trcurlyNode12 = (TRcurly)nodeArrayList8.get(0);
        teolNode13 = (TEol)nodeArrayList9.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode5, tpipeNode6, listNode8, tcharNode9, listNode11, trcurlyNode12, teolNode13);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AAsettingblock8Settingblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSettingblock psettingblockNode1;
        {
            // Block
        TSettingkwd tsettingkwdNode2;
        TLcurly tlcurlyNode3;
        PShortident pshortidentNode4;
        LinkedList listNode6 = new LinkedList();
        TPipe tpipeNode7;
        LinkedList listNode9 = new LinkedList();
        TChar tcharNode10;
        LinkedList listNode12 = new LinkedList();
        TRcurly trcurlyNode13;
        TEol teolNode14;
        tsettingkwdNode2 = (TSettingkwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortidentNode4 = (PShortident)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tpipeNode7 = (TPipe)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        tcharNode10 = (TChar)nodeArrayList7.get(0);
        {
            // Block
        LinkedList listNode11 = new LinkedList();
        listNode11 = (LinkedList)nodeArrayList8.get(0);
	if(listNode11 != null)
	{
	  listNode12.addAll(listNode11);
	}
        }
        trcurlyNode13 = (TRcurly)nodeArrayList9.get(0);
        teolNode14 = (TEol)nodeArrayList10.get(0);

        psettingblockNode1 = new ASettingblock(tsettingkwdNode2, tlcurlyNode3, pshortidentNode4, listNode6, tpipeNode7, listNode9, tcharNode10, listNode12, trcurlyNode13, teolNode14);
        }
	nodeList.add(psettingblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce APlains */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPlains pplainsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pplainsNode1 = new APlains(listNode3);
        }
	nodeList.add(pplainsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AShortblockPlainsv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPlainsv1 pplainsv1Node1;
        {
            // Block
        PShortblock pshortblockNode2;
        pshortblockNode2 = (PShortblock)nodeArrayList1.get(0);

        pplainsv1Node1 = new AShortblockPlainsv1(pshortblockNode2);
        }
	nodeList.add(pplainsv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce ACharallPlainsv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPlainsv1 pplainsv1Node1;
        {
            // Block
        PCharall pcharallNode2;
        pcharallNode2 = (PCharall)nodeArrayList1.get(0);

        pplainsv1Node1 = new ACharallPlainsv1(pcharallNode2);
        }
	nodeList.add(pplainsv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AAshortblock1Shortblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortblock pshortblockNode1;
        {
            // Block
        TFormatKwd tformatkwdNode2;
        TLcurly tlcurlyNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPlains pplainsNode5;
        TRcurly trcurlyNode6;
        tformatkwdNode2 = (TFormatKwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pplainsNode5 = (PPlains)nodeArrayList3.get(0);
        trcurlyNode6 = (TRcurly)nodeArrayList4.get(0);

        pshortblockNode1 = new AShortblock(tformatkwdNode2, tlcurlyNode3, null, pplainsNode5, trcurlyNode6);
        }
	nodeList.add(pshortblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AAshortblock2Shortblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortblock pshortblockNode1;
        {
            // Block
        TFormatKwd tformatkwdNode2;
        TLcurly tlcurlyNode3;
        PShortblockv1 pshortblockv1Node4;
        PPlains pplainsNode5;
        TRcurly trcurlyNode6;
        tformatkwdNode2 = (TFormatKwd)nodeArrayList1.get(0);
        tlcurlyNode3 = (TLcurly)nodeArrayList2.get(0);
        pshortblockv1Node4 = (PShortblockv1)nodeArrayList3.get(0);
        pplainsNode5 = (PPlains)nodeArrayList4.get(0);
        trcurlyNode6 = (TRcurly)nodeArrayList5.get(0);

        pshortblockNode1 = new AShortblock(tformatkwdNode2, tlcurlyNode3, pshortblockv1Node4, pplainsNode5, trcurlyNode6);
        }
	nodeList.add(pshortblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AShortblockv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortblockv1 pshortblockv1Node1;
        {
            // Block
        TSpace tspaceNode2;
        PShortidents pshortidentsNode3;
        tspaceNode2 = (TSpace)nodeArrayList1.get(0);
        pshortidentsNode3 = (PShortidents)nodeArrayList2.get(0);

        pshortblockv1Node1 = new AShortblockv1(tspaceNode2, pshortidentsNode3);
        }
	nodeList.add(pshortblockv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AShortidents */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortidents pshortidentsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPipe tpipeNode4;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpipeNode4 = (TPipe)nodeArrayList2.get(0);

        pshortidentsNode1 = new AShortidents(listNode3, tpipeNode4);
        }
	nodeList.add(pshortidentsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AAshortident1Shortident */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortident pshortidentNode1;
        {
            // Block
        PKwd pkwdNode2;
        LinkedList listNode3 = new LinkedList();
        TColon tcolonNode4;
        LinkedList listNode5 = new LinkedList();
        PShortidentv1 pshortidentv1Node6;
        pkwdNode2 = (PKwd)nodeArrayList1.get(0);
        {
            // Block
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        {
            // Block
        }
        pshortidentv1Node6 = (PShortidentv1)nodeArrayList3.get(0);

        pshortidentNode1 = new AShortident(pkwdNode2, listNode3, tcolonNode4, listNode5, pshortidentv1Node6);
        }
	nodeList.add(pshortidentNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AAshortident2Shortident */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortident pshortidentNode1;
        {
            // Block
        PKwd pkwdNode2;
        LinkedList listNode4 = new LinkedList();
        TColon tcolonNode5;
        LinkedList listNode6 = new LinkedList();
        PShortidentv1 pshortidentv1Node7;
        pkwdNode2 = (PKwd)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcolonNode5 = (TColon)nodeArrayList3.get(0);
        {
            // Block
        }
        pshortidentv1Node7 = (PShortidentv1)nodeArrayList4.get(0);

        pshortidentNode1 = new AShortident(pkwdNode2, listNode4, tcolonNode5, listNode6, pshortidentv1Node7);
        }
	nodeList.add(pshortidentNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AAshortident3Shortident */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortident pshortidentNode1;
        {
            // Block
        PKwd pkwdNode2;
        LinkedList listNode3 = new LinkedList();
        TColon tcolonNode4;
        LinkedList listNode6 = new LinkedList();
        PShortidentv1 pshortidentv1Node7;
        pkwdNode2 = (PKwd)nodeArrayList1.get(0);
        {
            // Block
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pshortidentv1Node7 = (PShortidentv1)nodeArrayList4.get(0);

        pshortidentNode1 = new AShortident(pkwdNode2, listNode3, tcolonNode4, listNode6, pshortidentv1Node7);
        }
	nodeList.add(pshortidentNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AAshortident4Shortident */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortident pshortidentNode1;
        {
            // Block
        PKwd pkwdNode2;
        LinkedList listNode4 = new LinkedList();
        TColon tcolonNode5;
        LinkedList listNode7 = new LinkedList();
        PShortidentv1 pshortidentv1Node8;
        pkwdNode2 = (PKwd)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcolonNode5 = (TColon)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        pshortidentv1Node8 = (PShortidentv1)nodeArrayList5.get(0);

        pshortidentNode1 = new AShortident(pkwdNode2, listNode4, tcolonNode5, listNode7, pshortidentv1Node8);
        }
	nodeList.add(pshortidentNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ACharShortidentv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortidentv1 pshortidentv1Node1;
        {
            // Block
        TChar tcharNode2;
        tcharNode2 = (TChar)nodeArrayList1.get(0);

        pshortidentv1Node1 = new ACharShortidentv1(tcharNode2);
        }
	nodeList.add(pshortidentv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce ADigitShortidentv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PShortidentv1 pshortidentv1Node1;
        {
            // Block
        TDigit tdigitNode2;
        tdigitNode2 = (TDigit)nodeArrayList1.get(0);

        pshortidentv1Node1 = new ADigitShortidentv1(tdigitNode2);
        }
	nodeList.add(pshortidentv1Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AKwd */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PKwd pkwdNode1;
        {
            // Block
        TAtsign tatsignNode2;
        TChar tcharNode3;
        tatsignNode2 = (TAtsign)nodeArrayList1.get(0);
        tcharNode3 = (TChar)nodeArrayList2.get(0);

        pkwdNode1 = new AKwd(tatsignNode2, tcharNode3);
        }
	nodeList.add(pkwdNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AColonCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TColon tcolonNode2;
        tcolonNode2 = (TColon)nodeArrayList1.get(0);

        pcharallNode1 = new AColonCharall(tcolonNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce ADigitCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TDigit tdigitNode2;
        tdigitNode2 = (TDigit)nodeArrayList1.get(0);

        pcharallNode1 = new ADigitCharall(tdigitNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce ASemicolonCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TScolon tscolonNode2;
        tscolonNode2 = (TScolon)nodeArrayList1.get(0);

        pcharallNode1 = new ASemicolonCharall(tscolonNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce APercentCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TPercent tpercentNode2;
        tpercentNode2 = (TPercent)nodeArrayList1.get(0);

        pcharallNode1 = new APercentCharall(tpercentNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AForwardslashCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TFslash tfslashNode2;
        tfslashNode2 = (TFslash)nodeArrayList1.get(0);

        pcharallNode1 = new AForwardslashCharall(tfslashNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce ABackslashCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TBslash tbslashNode2;
        tbslashNode2 = (TBslash)nodeArrayList1.get(0);

        pcharallNode1 = new ABackslashCharall(tbslashNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AMorecharCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TMorechar tmorecharNode2;
        tmorecharNode2 = (TMorechar)nodeArrayList1.get(0);

        pcharallNode1 = new AMorecharCharall(tmorecharNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce ACharCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TChar tcharNode2;
        tcharNode2 = (TChar)nodeArrayList1.get(0);

        pcharallNode1 = new ACharCharall(tcharNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce ASpaceCharall */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharall pcharallNode1;
        {
            // Block
        TSpace tspaceNode2;
        tspaceNode2 = (TSpace)nodeArrayList1.get(0);

        pcharallNode1 = new ASpaceCharall(tspaceNode2);
        }
	nodeList.add(pcharallNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ATerminal$Blocks */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PBlocks pblocksNode1;
        pblocksNode1 = (PBlocks)nodeArrayList1.get(0);
	if(pblocksNode1 != null)
	{
	  listNode2.add(pblocksNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce ANonTerminal$Blocks */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PBlocks pblocksNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pblocksNode2 = (PBlocks)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pblocksNode2 != null)
	{
	  listNode3.add(pblocksNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce ATerminal$Lines */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLines plinesNode1;
        plinesNode1 = (PLines)nodeArrayList1.get(0);
	if(plinesNode1 != null)
	{
	  listNode2.add(plinesNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce ANonTerminal$Lines */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLines plinesNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plinesNode2 = (PLines)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plinesNode2 != null)
	{
	  listNode3.add(plinesNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce ATerminal$Eol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TEol teolNode1;
        teolNode1 = (TEol)nodeArrayList1.get(0);
	if(teolNode1 != null)
	{
	  listNode2.add(teolNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce ANonTerminal$Eol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TEol teolNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        teolNode2 = (TEol)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(teolNode2 != null)
	{
	  listNode3.add(teolNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce ATerminal$Space */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TSpace tspaceNode1;
        tspaceNode1 = (TSpace)nodeArrayList1.get(0);
	if(tspaceNode1 != null)
	{
	  listNode2.add(tspaceNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce ANonTerminal$Space */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TSpace tspaceNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tspaceNode2 = (TSpace)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tspaceNode2 != null)
	{
	  listNode3.add(tspaceNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ATerminal$Plainsv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PPlainsv1 pplainsv1Node1;
        pplainsv1Node1 = (PPlainsv1)nodeArrayList1.get(0);
	if(pplainsv1Node1 != null)
	{
	  listNode2.add(pplainsv1Node1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce ANonTerminal$Plainsv1 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PPlainsv1 pplainsv1Node2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pplainsv1Node2 = (PPlainsv1)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pplainsv1Node2 != null)
	{
	  listNode3.add(pplainsv1Node2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce ATerminal$Shortident */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PShortident pshortidentNode1;
        pshortidentNode1 = (PShortident)nodeArrayList1.get(0);
	if(pshortidentNode1 != null)
	{
	  listNode2.add(pshortidentNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce ANonTerminal$Shortident */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PShortident pshortidentNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pshortidentNode2 = (PShortident)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pshortidentNode2 != null)
	{
	  listNode3.add(pshortidentNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {2, SHIFT, 1}, {3, SHIFT, 2}, },
			{{-1, ERROR, 1}, {6, SHIFT, 8}, },
			{{-1, ERROR, 2}, {6, SHIFT, 9}, },
			{{-1, ERROR, 3}, {20, ACCEPT, -1}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 5}, {0, SHIFT, 11}, {1, SHIFT, 12}, {2, SHIFT, 1}, {4, SHIFT, 13}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {13, SHIFT, 18}, {14, SHIFT, 19}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 1}, {2, SHIFT, 1}, {3, SHIFT, 2}, },
			{{-1, ERROR, 8}, {5, SHIFT, 36}, },
			{{-1, ERROR, 9}, {1, SHIFT, 39}, {17, SHIFT, 40}, },
			{{-1, ERROR, 10}, {16, SHIFT, 42}, },
			{{-1, ERROR, 11}, {6, SHIFT, 43}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 13}, {6, SHIFT, 9}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 18}, {0, SHIFT, 11}, {1, SHIFT, 12}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {13, SHIFT, 18}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, ERROR, 19}, {0, SHIFT, 11}, {1, SHIFT, 12}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {14, SHIFT, 19}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 29}, {16, SHIFT, 51}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 33}, {0, SHIFT, 11}, {1, SHIFT, 12}, {2, SHIFT, 1}, {4, SHIFT, 13}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {13, SHIFT, 18}, {14, SHIFT, 19}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, REDUCE, 37}, {0, SHIFT, 11}, {1, SHIFT, 12}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 36}, {17, SHIFT, 55}, },
			{{-1, ERROR, 37}, {1, SHIFT, 39}, {8, SHIFT, 56}, },
			{{-1, ERROR, 38}, {1, SHIFT, 39}, {11, SHIFT, 58}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 40}, {1, SHIFT, 39}, {7, SHIFT, 60}, {8, SHIFT, 61}, },
			{{-1, ERROR, 41}, {1, SHIFT, 64}, {17, SHIFT, 65}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 43}, {0, SHIFT, 11}, {1, SHIFT, 66}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, ERROR, 44}, {16, SHIFT, 69}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 47}, {16, SHIFT, 71}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 50}, {16, SHIFT, 72}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 56}, {1, SHIFT, 39}, {17, SHIFT, 73}, },
			{{-1, ERROR, 57}, {1, SHIFT, 64}, {8, SHIFT, 75}, },
			{{-1, ERROR, 58}, {1, SHIFT, 39}, {17, SHIFT, 76}, {18, SHIFT, 77}, },
			{{-1, ERROR, 59}, {1, SHIFT, 64}, {11, SHIFT, 80}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 61}, {1, SHIFT, 39}, {17, SHIFT, 81}, },
			{{-1, ERROR, 62}, {7, SHIFT, 83}, },
			{{-1, ERROR, 63}, {1, SHIFT, 64}, {7, SHIFT, 84}, {8, SHIFT, 61}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 65}, {1, SHIFT, 39}, {7, SHIFT, 86}, {8, SHIFT, 61}, },
			{{-1, REDUCE, 59}, {5, SHIFT, 36}, },
			{{-1, ERROR, 67}, {7, SHIFT, 92}, },
			{{-1, ERROR, 68}, {0, SHIFT, 11}, {1, SHIFT, 12}, {9, SHIFT, 14}, {10, SHIFT, 15}, {11, SHIFT, 16}, {12, SHIFT, 17}, {15, SHIFT, 20}, {17, SHIFT, 21}, {18, SHIFT, 22}, {19, SHIFT, 23}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 16}, {16, SHIFT, 94}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 73}, {1, SHIFT, 39}, {7, SHIFT, 95}, },
			{{-1, ERROR, 74}, {1, SHIFT, 64}, {17, SHIFT, 97}, },
			{{-1, ERROR, 75}, {1, SHIFT, 39}, {17, SHIFT, 98}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 79}, {1, SHIFT, 64}, {17, SHIFT, 76}, {18, SHIFT, 77}, },
			{{-1, ERROR, 80}, {1, SHIFT, 39}, {17, SHIFT, 76}, {18, SHIFT, 77}, },
			{{-1, REDUCE, 25}, {1, SHIFT, 39}, },
			{{-1, ERROR, 82}, {1, SHIFT, 64}, {17, SHIFT, 104}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 85}, {7, SHIFT, 105}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 87}, {7, SHIFT, 106}, },
			{{-1, ERROR, 88}, {1, SHIFT, 64}, {7, SHIFT, 107}, {8, SHIFT, 61}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 91}, {5, SHIFT, 36}, {8, SHIFT, 109}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 93}, {7, SHIFT, 111}, },
			{{-1, REDUCE, 65}, },
			{{-1, ERROR, 95}, {16, SHIFT, 112}, },
			{{-1, ERROR, 96}, {1, SHIFT, 64}, {7, SHIFT, 113}, },
			{{-1, ERROR, 97}, {1, SHIFT, 39}, {7, SHIFT, 114}, },
			{{-1, ERROR, 98}, {1, SHIFT, 39}, {7, SHIFT, 116}, },
			{{-1, ERROR, 99}, {1, SHIFT, 64}, {17, SHIFT, 118}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 102}, {1, SHIFT, 64}, {17, SHIFT, 76}, {18, SHIFT, 77}, },
			{{-1, REDUCE, 27}, {1, SHIFT, 64}, },
			{{-1, REDUCE, 26}, {1, SHIFT, 39}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 108}, {7, SHIFT, 121}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 113}, {16, SHIFT, 122}, },
			{{-1, ERROR, 114}, {16, SHIFT, 123}, },
			{{-1, ERROR, 115}, {1, SHIFT, 64}, {7, SHIFT, 124}, },
			{{-1, ERROR, 116}, {16, SHIFT, 125}, },
			{{-1, ERROR, 117}, {1, SHIFT, 64}, {7, SHIFT, 126}, },
			{{-1, ERROR, 118}, {1, SHIFT, 39}, {7, SHIFT, 127}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 28}, {1, SHIFT, 64}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 124}, {16, SHIFT, 129}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 126}, {16, SHIFT, 130}, },
			{{-1, ERROR, 127}, {16, SHIFT, 131}, },
			{{-1, ERROR, 128}, {1, SHIFT, 64}, {7, SHIFT, 132}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 132}, {16, SHIFT, 133}, },
			{{-1, REDUCE, 36}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 3}, },
			{{-1, 4}, {7, 35}, },
			{{-1, 24}, {33, 52}, },
			{{-1, 25}, {19, 48}, },
			{{-1, 49}, },
			{{-1, 26}, {18, 45}, },
			{{-1, 46}, },
			{{-1, 5}, },
			{{-1, 27}, {33, 53}, },
			{{-1, 10}, {13, 44}, },
			{{-1, 62}, {63, 85}, {65, 87}, {88, 108}, },
			{{-1, 6}, {5, 28}, {33, 28}, },
			{{-1, 29}, {18, 47}, {19, 50}, {43, 67}, {68, 93}, },
			{{-1, 30}, {34, 54}, },
			{{-1, 31}, },
			{{-1, 68}, },
			{{-1, 89}, },
			{{-1, 37}, {66, 90}, {91, 110}, },
			{{-1, 78}, {79, 100}, {80, 101}, {102, 119}, },
			{{-1, 38}, },
			{{-1, 32}, },
			{{-1, 7}, },
			{{-1, 33}, },
			{{-1, 70}, },
			{{-1, 41}, {37, 57}, {38, 59}, {40, 63}, {56, 74}, {58, 79}, {61, 82}, {65, 88}, {73, 96}, {75, 99}, {80, 102}, {81, 103}, {97, 115}, {98, 117}, {104, 120}, {118, 128}, },
			{{-1, 34}, },
			{{-1, 91}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: '@setting', '@begin', EOF",
			"expecting: '{'",
			"expecting: EOF",
			"expecting: format kwd, ' ', '@setting', '@end', '/', '\', ':', ';', '*', '#', '%', char, digit, morechar",
			"expecting: '@'",
			"expecting: ' ', char",
			"expecting: eol",
			"expecting: format kwd, ' ', '}', '/', '\', ':', ';', '%', eol, char, digit, morechar",
			"expecting: format kwd, ' ', '/', '\', ':', ';', '*', '%', char, digit, morechar",
			"expecting: format kwd, ' ', '/', '\', ':', ';', '#', '%', char, digit, morechar",
			"expecting: char",
			"expecting: ' ', '|'",
			"expecting: ' ', ':'",
			"expecting: ' ', '}', '|', ':', char, digit",
			"expecting: ' ', '}', '|'",
			"expecting: format kwd, ' ', '/', '\', ':', ';', '%', char, digit, morechar",
			"expecting: ' ', char, digit",
			"expecting: '}'",
			"expecting: format kwd, ' ', '@', '}', '/', '\', ':', ';', '%', char, digit, morechar",
			"expecting: '@setting', '@begin', eol, EOF",
			"expecting: ' ', '}'",
			"expecting: ' ', '@', '|'",
			"expecting: '@', '|'",
			"expecting: format kwd, ' ', '@setting', '@begin', '@end', '/', '\', ':', ';', '*', '#', '%', char, digit, morechar, EOF",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 2, 0, 3, 0, 0, 4, 5, 6, 1, 7, 1, 7, 7, 7, 7, 8, 9, 7, 7, 7, 7, 3, 3, 3, 0, 3, 6, 7, 7, 7, 3, 7, 0, 10, 11, 12, 13, 14, 5, 3, 15, 6, 3, 3, 6, 3, 3, 6, 3, 3, 0, 7, 12, 5, 11, 16, 12, 6, 5, 17, 14, 13, 14, 18, 17, 15, 19, 19, 3, 3, 20, 5, 5, 21, 21, 21, 16, 16, 20, 5, 6, 6, 17, 6, 17, 14, 15, 22, 22, 7, 17, 19, 6, 20, 20, 20, 5, 21, 21, 16, 20, 20, 6, 6, 6, 17, 15, 22, 7, 23, 6, 6, 20, 6, 20, 20, 21, 20, 6, 23, 23, 6, 23, 6, 6, 20, 23, 23, 23, 6, 23, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
